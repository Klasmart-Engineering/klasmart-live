{"version":3,"file":"index.js","sources":["../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","index.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.Action = (function() {\n\n    /**\n     * Properties of an Action.\n     * @exports IAction\n     * @interface IAction\n     * @property {string|null} [id] Action id\n     * @property {ISetDevice|null} [setDevice] Action setDevice\n     * @property {IRemoveDevice|null} [removeDevice] Action removeDevice\n     * @property {ISetWebRTCStream|null} [setWebRtcStream] Action setWebRtcStream\n     * @property {ISetActivityStream|null} [setActivity] Action setActivity\n     * @property {ISetHost|null} [setHost] Action setHost\n     * @property {IAddTrophy|null} [addTrophy] Action addTrophy\n     * @property {ISetContent|null} [setContent] Action setContent\n     * @property {ISendChatMessage|null} [sendChatMessage] Action sendChatMessage\n     * @property {IUserJoin|null} [userJoin] Action userJoin\n     * @property {IUserLeave|null} [userLeave] Action userLeave\n     * @property {IEndClass|null} [endClass] Action endClass\n     * @property {IHeartbeat|null} [heartbeat] Action heartbeat\n     */\n\n    /**\n     * Constructs a new Action.\n     * @exports Action\n     * @classdesc Represents an Action.\n     * @implements IAction\n     * @constructor\n     * @param {IAction=} [properties] Properties to set\n     */\n    function Action(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Action id.\n     * @member {string} id\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.id = \"\";\n\n    /**\n     * Action setDevice.\n     * @member {ISetDevice|null|undefined} setDevice\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.setDevice = null;\n\n    /**\n     * Action removeDevice.\n     * @member {IRemoveDevice|null|undefined} removeDevice\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.removeDevice = null;\n\n    /**\n     * Action setWebRtcStream.\n     * @member {ISetWebRTCStream|null|undefined} setWebRtcStream\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.setWebRtcStream = null;\n\n    /**\n     * Action setActivity.\n     * @member {ISetActivityStream|null|undefined} setActivity\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.setActivity = null;\n\n    /**\n     * Action setHost.\n     * @member {ISetHost|null|undefined} setHost\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.setHost = null;\n\n    /**\n     * Action addTrophy.\n     * @member {IAddTrophy|null|undefined} addTrophy\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.addTrophy = null;\n\n    /**\n     * Action setContent.\n     * @member {ISetContent|null|undefined} setContent\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.setContent = null;\n\n    /**\n     * Action sendChatMessage.\n     * @member {ISendChatMessage|null|undefined} sendChatMessage\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.sendChatMessage = null;\n\n    /**\n     * Action userJoin.\n     * @member {IUserJoin|null|undefined} userJoin\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.userJoin = null;\n\n    /**\n     * Action userLeave.\n     * @member {IUserLeave|null|undefined} userLeave\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.userLeave = null;\n\n    /**\n     * Action endClass.\n     * @member {IEndClass|null|undefined} endClass\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.endClass = null;\n\n    /**\n     * Action heartbeat.\n     * @member {IHeartbeat|null|undefined} heartbeat\n     * @memberof Action\n     * @instance\n     */\n    Action.prototype.heartbeat = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * Action action.\n     * @member {\"setDevice\"|\"removeDevice\"|\"setWebRtcStream\"|\"setActivity\"|\"setHost\"|\"addTrophy\"|\"setContent\"|\"sendChatMessage\"|\"userJoin\"|\"userLeave\"|\"endClass\"|\"heartbeat\"|undefined} action\n     * @memberof Action\n     * @instance\n     */\n    Object.defineProperty(Action.prototype, \"action\", {\n        get: $util.oneOfGetter($oneOfFields = [\"setDevice\", \"removeDevice\", \"setWebRtcStream\", \"setActivity\", \"setHost\", \"addTrophy\", \"setContent\", \"sendChatMessage\", \"userJoin\", \"userLeave\", \"endClass\", \"heartbeat\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Creates a new Action instance using the specified properties.\n     * @function create\n     * @memberof Action\n     * @static\n     * @param {IAction=} [properties] Properties to set\n     * @returns {Action} Action instance\n     */\n    Action.create = function create(properties) {\n        return new Action(properties);\n    };\n\n    /**\n     * Encodes the specified Action message. Does not implicitly {@link Action.verify|verify} messages.\n     * @function encode\n     * @memberof Action\n     * @static\n     * @param {IAction} message Action message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Action.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.heartbeat != null && Object.hasOwnProperty.call(message, \"heartbeat\"))\n            $root.Heartbeat.encode(message.heartbeat, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.setDevice != null && Object.hasOwnProperty.call(message, \"setDevice\"))\n            $root.SetDevice.encode(message.setDevice, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.removeDevice != null && Object.hasOwnProperty.call(message, \"removeDevice\"))\n            $root.RemoveDevice.encode(message.removeDevice, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.setWebRtcStream != null && Object.hasOwnProperty.call(message, \"setWebRtcStream\"))\n            $root.SetWebRTCStream.encode(message.setWebRtcStream, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.setActivity != null && Object.hasOwnProperty.call(message, \"setActivity\"))\n            $root.SetActivityStream.encode(message.setActivity, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.setHost != null && Object.hasOwnProperty.call(message, \"setHost\"))\n            $root.SetHost.encode(message.setHost, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.addTrophy != null && Object.hasOwnProperty.call(message, \"addTrophy\"))\n            $root.AddTrophy.encode(message.addTrophy, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.setContent != null && Object.hasOwnProperty.call(message, \"setContent\"))\n            $root.SetContent.encode(message.setContent, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n        if (message.sendChatMessage != null && Object.hasOwnProperty.call(message, \"sendChatMessage\"))\n            $root.SendChatMessage.encode(message.sendChatMessage, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.userJoin != null && Object.hasOwnProperty.call(message, \"userJoin\"))\n            $root.UserJoin.encode(message.userJoin, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.userLeave != null && Object.hasOwnProperty.call(message, \"userLeave\"))\n            $root.UserLeave.encode(message.userLeave, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        if (message.endClass != null && Object.hasOwnProperty.call(message, \"endClass\"))\n            $root.EndClass.encode(message.endClass, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Action message, length delimited. Does not implicitly {@link Action.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Action\n     * @static\n     * @param {IAction} message Action message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Action.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an Action message from the specified reader or buffer.\n     * @function decode\n     * @memberof Action\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Action} Action\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Action.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Action();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 3:\n                message.setDevice = $root.SetDevice.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.removeDevice = $root.RemoveDevice.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.setWebRtcStream = $root.SetWebRTCStream.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.setActivity = $root.SetActivityStream.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.setHost = $root.SetHost.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.addTrophy = $root.AddTrophy.decode(reader, reader.uint32());\n                break;\n            case 9:\n                message.setContent = $root.SetContent.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.sendChatMessage = $root.SendChatMessage.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.userJoin = $root.UserJoin.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.userLeave = $root.UserLeave.decode(reader, reader.uint32());\n                break;\n            case 13:\n                message.endClass = $root.EndClass.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.heartbeat = $root.Heartbeat.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an Action message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Action\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Action} Action\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Action.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an Action message.\n     * @function verify\n     * @memberof Action\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Action.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        var properties = {};\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.setDevice != null && message.hasOwnProperty(\"setDevice\")) {\n            properties.action = 1;\n            {\n                var error = $root.SetDevice.verify(message.setDevice);\n                if (error)\n                    return \"setDevice.\" + error;\n            }\n        }\n        if (message.removeDevice != null && message.hasOwnProperty(\"removeDevice\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.RemoveDevice.verify(message.removeDevice);\n                if (error)\n                    return \"removeDevice.\" + error;\n            }\n        }\n        if (message.setWebRtcStream != null && message.hasOwnProperty(\"setWebRtcStream\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.SetWebRTCStream.verify(message.setWebRtcStream);\n                if (error)\n                    return \"setWebRtcStream.\" + error;\n            }\n        }\n        if (message.setActivity != null && message.hasOwnProperty(\"setActivity\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.SetActivityStream.verify(message.setActivity);\n                if (error)\n                    return \"setActivity.\" + error;\n            }\n        }\n        if (message.setHost != null && message.hasOwnProperty(\"setHost\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.SetHost.verify(message.setHost);\n                if (error)\n                    return \"setHost.\" + error;\n            }\n        }\n        if (message.addTrophy != null && message.hasOwnProperty(\"addTrophy\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.AddTrophy.verify(message.addTrophy);\n                if (error)\n                    return \"addTrophy.\" + error;\n            }\n        }\n        if (message.setContent != null && message.hasOwnProperty(\"setContent\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.SetContent.verify(message.setContent);\n                if (error)\n                    return \"setContent.\" + error;\n            }\n        }\n        if (message.sendChatMessage != null && message.hasOwnProperty(\"sendChatMessage\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.SendChatMessage.verify(message.sendChatMessage);\n                if (error)\n                    return \"sendChatMessage.\" + error;\n            }\n        }\n        if (message.userJoin != null && message.hasOwnProperty(\"userJoin\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.UserJoin.verify(message.userJoin);\n                if (error)\n                    return \"userJoin.\" + error;\n            }\n        }\n        if (message.userLeave != null && message.hasOwnProperty(\"userLeave\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.UserLeave.verify(message.userLeave);\n                if (error)\n                    return \"userLeave.\" + error;\n            }\n        }\n        if (message.endClass != null && message.hasOwnProperty(\"endClass\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.EndClass.verify(message.endClass);\n                if (error)\n                    return \"endClass.\" + error;\n            }\n        }\n        if (message.heartbeat != null && message.hasOwnProperty(\"heartbeat\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.Heartbeat.verify(message.heartbeat);\n                if (error)\n                    return \"heartbeat.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates an Action message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Action\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Action} Action\n     */\n    Action.fromObject = function fromObject(object) {\n        if (object instanceof $root.Action)\n            return object;\n        var message = new $root.Action();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.setDevice != null) {\n            if (typeof object.setDevice !== \"object\")\n                throw TypeError(\".Action.setDevice: object expected\");\n            message.setDevice = $root.SetDevice.fromObject(object.setDevice);\n        }\n        if (object.removeDevice != null) {\n            if (typeof object.removeDevice !== \"object\")\n                throw TypeError(\".Action.removeDevice: object expected\");\n            message.removeDevice = $root.RemoveDevice.fromObject(object.removeDevice);\n        }\n        if (object.setWebRtcStream != null) {\n            if (typeof object.setWebRtcStream !== \"object\")\n                throw TypeError(\".Action.setWebRtcStream: object expected\");\n            message.setWebRtcStream = $root.SetWebRTCStream.fromObject(object.setWebRtcStream);\n        }\n        if (object.setActivity != null) {\n            if (typeof object.setActivity !== \"object\")\n                throw TypeError(\".Action.setActivity: object expected\");\n            message.setActivity = $root.SetActivityStream.fromObject(object.setActivity);\n        }\n        if (object.setHost != null) {\n            if (typeof object.setHost !== \"object\")\n                throw TypeError(\".Action.setHost: object expected\");\n            message.setHost = $root.SetHost.fromObject(object.setHost);\n        }\n        if (object.addTrophy != null) {\n            if (typeof object.addTrophy !== \"object\")\n                throw TypeError(\".Action.addTrophy: object expected\");\n            message.addTrophy = $root.AddTrophy.fromObject(object.addTrophy);\n        }\n        if (object.setContent != null) {\n            if (typeof object.setContent !== \"object\")\n                throw TypeError(\".Action.setContent: object expected\");\n            message.setContent = $root.SetContent.fromObject(object.setContent);\n        }\n        if (object.sendChatMessage != null) {\n            if (typeof object.sendChatMessage !== \"object\")\n                throw TypeError(\".Action.sendChatMessage: object expected\");\n            message.sendChatMessage = $root.SendChatMessage.fromObject(object.sendChatMessage);\n        }\n        if (object.userJoin != null) {\n            if (typeof object.userJoin !== \"object\")\n                throw TypeError(\".Action.userJoin: object expected\");\n            message.userJoin = $root.UserJoin.fromObject(object.userJoin);\n        }\n        if (object.userLeave != null) {\n            if (typeof object.userLeave !== \"object\")\n                throw TypeError(\".Action.userLeave: object expected\");\n            message.userLeave = $root.UserLeave.fromObject(object.userLeave);\n        }\n        if (object.endClass != null) {\n            if (typeof object.endClass !== \"object\")\n                throw TypeError(\".Action.endClass: object expected\");\n            message.endClass = $root.EndClass.fromObject(object.endClass);\n        }\n        if (object.heartbeat != null) {\n            if (typeof object.heartbeat !== \"object\")\n                throw TypeError(\".Action.heartbeat: object expected\");\n            message.heartbeat = $root.Heartbeat.fromObject(object.heartbeat);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an Action message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Action\n     * @static\n     * @param {Action} message Action\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Action.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.id = \"\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.heartbeat != null && message.hasOwnProperty(\"heartbeat\")) {\n            object.heartbeat = $root.Heartbeat.toObject(message.heartbeat, options);\n            if (options.oneofs)\n                object.action = \"heartbeat\";\n        }\n        if (message.setDevice != null && message.hasOwnProperty(\"setDevice\")) {\n            object.setDevice = $root.SetDevice.toObject(message.setDevice, options);\n            if (options.oneofs)\n                object.action = \"setDevice\";\n        }\n        if (message.removeDevice != null && message.hasOwnProperty(\"removeDevice\")) {\n            object.removeDevice = $root.RemoveDevice.toObject(message.removeDevice, options);\n            if (options.oneofs)\n                object.action = \"removeDevice\";\n        }\n        if (message.setWebRtcStream != null && message.hasOwnProperty(\"setWebRtcStream\")) {\n            object.setWebRtcStream = $root.SetWebRTCStream.toObject(message.setWebRtcStream, options);\n            if (options.oneofs)\n                object.action = \"setWebRtcStream\";\n        }\n        if (message.setActivity != null && message.hasOwnProperty(\"setActivity\")) {\n            object.setActivity = $root.SetActivityStream.toObject(message.setActivity, options);\n            if (options.oneofs)\n                object.action = \"setActivity\";\n        }\n        if (message.setHost != null && message.hasOwnProperty(\"setHost\")) {\n            object.setHost = $root.SetHost.toObject(message.setHost, options);\n            if (options.oneofs)\n                object.action = \"setHost\";\n        }\n        if (message.addTrophy != null && message.hasOwnProperty(\"addTrophy\")) {\n            object.addTrophy = $root.AddTrophy.toObject(message.addTrophy, options);\n            if (options.oneofs)\n                object.action = \"addTrophy\";\n        }\n        if (message.setContent != null && message.hasOwnProperty(\"setContent\")) {\n            object.setContent = $root.SetContent.toObject(message.setContent, options);\n            if (options.oneofs)\n                object.action = \"setContent\";\n        }\n        if (message.sendChatMessage != null && message.hasOwnProperty(\"sendChatMessage\")) {\n            object.sendChatMessage = $root.SendChatMessage.toObject(message.sendChatMessage, options);\n            if (options.oneofs)\n                object.action = \"sendChatMessage\";\n        }\n        if (message.userJoin != null && message.hasOwnProperty(\"userJoin\")) {\n            object.userJoin = $root.UserJoin.toObject(message.userJoin, options);\n            if (options.oneofs)\n                object.action = \"userJoin\";\n        }\n        if (message.userLeave != null && message.hasOwnProperty(\"userLeave\")) {\n            object.userLeave = $root.UserLeave.toObject(message.userLeave, options);\n            if (options.oneofs)\n                object.action = \"userLeave\";\n        }\n        if (message.endClass != null && message.hasOwnProperty(\"endClass\")) {\n            object.endClass = $root.EndClass.toObject(message.endClass, options);\n            if (options.oneofs)\n                object.action = \"endClass\";\n        }\n        return object;\n    };\n\n    /**\n     * Converts this Action to JSON.\n     * @function toJSON\n     * @memberof Action\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Action.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Action;\n})();\n\n$root.ActionAcknowledgement = (function() {\n\n    /**\n     * Properties of an ActionAcknowledgement.\n     * @exports IActionAcknowledgement\n     * @interface IActionAcknowledgement\n     * @property {string|null} [id] ActionAcknowledgement id\n     * @property {string|null} [error] ActionAcknowledgement error\n     * @property {number|null} [code] ActionAcknowledgement code\n     */\n\n    /**\n     * Constructs a new ActionAcknowledgement.\n     * @exports ActionAcknowledgement\n     * @classdesc Represents an ActionAcknowledgement.\n     * @implements IActionAcknowledgement\n     * @constructor\n     * @param {IActionAcknowledgement=} [properties] Properties to set\n     */\n    function ActionAcknowledgement(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ActionAcknowledgement id.\n     * @member {string} id\n     * @memberof ActionAcknowledgement\n     * @instance\n     */\n    ActionAcknowledgement.prototype.id = \"\";\n\n    /**\n     * ActionAcknowledgement error.\n     * @member {string} error\n     * @memberof ActionAcknowledgement\n     * @instance\n     */\n    ActionAcknowledgement.prototype.error = \"\";\n\n    /**\n     * ActionAcknowledgement code.\n     * @member {number} code\n     * @memberof ActionAcknowledgement\n     * @instance\n     */\n    ActionAcknowledgement.prototype.code = 0;\n\n    /**\n     * Creates a new ActionAcknowledgement instance using the specified properties.\n     * @function create\n     * @memberof ActionAcknowledgement\n     * @static\n     * @param {IActionAcknowledgement=} [properties] Properties to set\n     * @returns {ActionAcknowledgement} ActionAcknowledgement instance\n     */\n    ActionAcknowledgement.create = function create(properties) {\n        return new ActionAcknowledgement(properties);\n    };\n\n    /**\n     * Encodes the specified ActionAcknowledgement message. Does not implicitly {@link ActionAcknowledgement.verify|verify} messages.\n     * @function encode\n     * @memberof ActionAcknowledgement\n     * @static\n     * @param {IActionAcknowledgement} message ActionAcknowledgement message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ActionAcknowledgement.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.error != null && Object.hasOwnProperty.call(message, \"error\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.error);\n        if (message.code != null && Object.hasOwnProperty.call(message, \"code\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.code);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ActionAcknowledgement message, length delimited. Does not implicitly {@link ActionAcknowledgement.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ActionAcknowledgement\n     * @static\n     * @param {IActionAcknowledgement} message ActionAcknowledgement message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ActionAcknowledgement.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an ActionAcknowledgement message from the specified reader or buffer.\n     * @function decode\n     * @memberof ActionAcknowledgement\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ActionAcknowledgement} ActionAcknowledgement\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ActionAcknowledgement.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ActionAcknowledgement();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.error = reader.string();\n                break;\n            case 3:\n                message.code = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an ActionAcknowledgement message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ActionAcknowledgement\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ActionAcknowledgement} ActionAcknowledgement\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ActionAcknowledgement.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an ActionAcknowledgement message.\n     * @function verify\n     * @memberof ActionAcknowledgement\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ActionAcknowledgement.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            if (!$util.isString(message.error))\n                return \"error: string expected\";\n        if (message.code != null && message.hasOwnProperty(\"code\"))\n            if (!$util.isInteger(message.code))\n                return \"code: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates an ActionAcknowledgement message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ActionAcknowledgement\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ActionAcknowledgement} ActionAcknowledgement\n     */\n    ActionAcknowledgement.fromObject = function fromObject(object) {\n        if (object instanceof $root.ActionAcknowledgement)\n            return object;\n        var message = new $root.ActionAcknowledgement();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.error != null)\n            message.error = String(object.error);\n        if (object.code != null)\n            message.code = object.code >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an ActionAcknowledgement message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ActionAcknowledgement\n     * @static\n     * @param {ActionAcknowledgement} message ActionAcknowledgement\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ActionAcknowledgement.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.id = \"\";\n            object.error = \"\";\n            object.code = 0;\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            object.error = message.error;\n        if (message.code != null && message.hasOwnProperty(\"code\"))\n            object.code = message.code;\n        return object;\n    };\n\n    /**\n     * Converts this ActionAcknowledgement to JSON.\n     * @function toJSON\n     * @memberof ActionAcknowledgement\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ActionAcknowledgement.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ActionAcknowledgement;\n})();\n\n$root.UserJoin = (function() {\n\n    /**\n     * Properties of a UserJoin.\n     * @exports IUserJoin\n     * @interface IUserJoin\n     */\n\n    /**\n     * Constructs a new UserJoin.\n     * @exports UserJoin\n     * @classdesc Represents a UserJoin.\n     * @implements IUserJoin\n     * @constructor\n     * @param {IUserJoin=} [properties] Properties to set\n     */\n    function UserJoin(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new UserJoin instance using the specified properties.\n     * @function create\n     * @memberof UserJoin\n     * @static\n     * @param {IUserJoin=} [properties] Properties to set\n     * @returns {UserJoin} UserJoin instance\n     */\n    UserJoin.create = function create(properties) {\n        return new UserJoin(properties);\n    };\n\n    /**\n     * Encodes the specified UserJoin message. Does not implicitly {@link UserJoin.verify|verify} messages.\n     * @function encode\n     * @memberof UserJoin\n     * @static\n     * @param {IUserJoin} message UserJoin message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserJoin.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserJoin message, length delimited. Does not implicitly {@link UserJoin.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserJoin\n     * @static\n     * @param {IUserJoin} message UserJoin message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserJoin.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserJoin message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserJoin\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserJoin} UserJoin\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserJoin.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserJoin();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserJoin message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserJoin\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserJoin} UserJoin\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserJoin.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserJoin message.\n     * @function verify\n     * @memberof UserJoin\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserJoin.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a UserJoin message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserJoin\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserJoin} UserJoin\n     */\n    UserJoin.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserJoin)\n            return object;\n        return new $root.UserJoin();\n    };\n\n    /**\n     * Creates a plain object from a UserJoin message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserJoin\n     * @static\n     * @param {UserJoin} message UserJoin\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserJoin.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this UserJoin to JSON.\n     * @function toJSON\n     * @memberof UserJoin\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserJoin.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserJoin;\n})();\n\n$root.UserLeave = (function() {\n\n    /**\n     * Properties of a UserLeave.\n     * @exports IUserLeave\n     * @interface IUserLeave\n     */\n\n    /**\n     * Constructs a new UserLeave.\n     * @exports UserLeave\n     * @classdesc Represents a UserLeave.\n     * @implements IUserLeave\n     * @constructor\n     * @param {IUserLeave=} [properties] Properties to set\n     */\n    function UserLeave(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new UserLeave instance using the specified properties.\n     * @function create\n     * @memberof UserLeave\n     * @static\n     * @param {IUserLeave=} [properties] Properties to set\n     * @returns {UserLeave} UserLeave instance\n     */\n    UserLeave.create = function create(properties) {\n        return new UserLeave(properties);\n    };\n\n    /**\n     * Encodes the specified UserLeave message. Does not implicitly {@link UserLeave.verify|verify} messages.\n     * @function encode\n     * @memberof UserLeave\n     * @static\n     * @param {IUserLeave} message UserLeave message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserLeave.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserLeave message, length delimited. Does not implicitly {@link UserLeave.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserLeave\n     * @static\n     * @param {IUserLeave} message UserLeave message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserLeave.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserLeave message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserLeave\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserLeave} UserLeave\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserLeave.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserLeave();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserLeave message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserLeave\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserLeave} UserLeave\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserLeave.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserLeave message.\n     * @function verify\n     * @memberof UserLeave\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserLeave.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a UserLeave message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserLeave\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserLeave} UserLeave\n     */\n    UserLeave.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserLeave)\n            return object;\n        return new $root.UserLeave();\n    };\n\n    /**\n     * Creates a plain object from a UserLeave message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserLeave\n     * @static\n     * @param {UserLeave} message UserLeave\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserLeave.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this UserLeave to JSON.\n     * @function toJSON\n     * @memberof UserLeave\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserLeave.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserLeave;\n})();\n\n$root.EndClass = (function() {\n\n    /**\n     * Properties of an EndClass.\n     * @exports IEndClass\n     * @interface IEndClass\n     */\n\n    /**\n     * Constructs a new EndClass.\n     * @exports EndClass\n     * @classdesc Represents an EndClass.\n     * @implements IEndClass\n     * @constructor\n     * @param {IEndClass=} [properties] Properties to set\n     */\n    function EndClass(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new EndClass instance using the specified properties.\n     * @function create\n     * @memberof EndClass\n     * @static\n     * @param {IEndClass=} [properties] Properties to set\n     * @returns {EndClass} EndClass instance\n     */\n    EndClass.create = function create(properties) {\n        return new EndClass(properties);\n    };\n\n    /**\n     * Encodes the specified EndClass message. Does not implicitly {@link EndClass.verify|verify} messages.\n     * @function encode\n     * @memberof EndClass\n     * @static\n     * @param {IEndClass} message EndClass message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EndClass.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified EndClass message, length delimited. Does not implicitly {@link EndClass.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof EndClass\n     * @static\n     * @param {IEndClass} message EndClass message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EndClass.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an EndClass message from the specified reader or buffer.\n     * @function decode\n     * @memberof EndClass\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {EndClass} EndClass\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EndClass.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.EndClass();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an EndClass message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof EndClass\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {EndClass} EndClass\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EndClass.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an EndClass message.\n     * @function verify\n     * @memberof EndClass\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    EndClass.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates an EndClass message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof EndClass\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {EndClass} EndClass\n     */\n    EndClass.fromObject = function fromObject(object) {\n        if (object instanceof $root.EndClass)\n            return object;\n        return new $root.EndClass();\n    };\n\n    /**\n     * Creates a plain object from an EndClass message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof EndClass\n     * @static\n     * @param {EndClass} message EndClass\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    EndClass.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this EndClass to JSON.\n     * @function toJSON\n     * @memberof EndClass\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    EndClass.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return EndClass;\n})();\n\n$root.Heartbeat = (function() {\n\n    /**\n     * Properties of a Heartbeat.\n     * @exports IHeartbeat\n     * @interface IHeartbeat\n     */\n\n    /**\n     * Constructs a new Heartbeat.\n     * @exports Heartbeat\n     * @classdesc Represents a Heartbeat.\n     * @implements IHeartbeat\n     * @constructor\n     * @param {IHeartbeat=} [properties] Properties to set\n     */\n    function Heartbeat(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new Heartbeat instance using the specified properties.\n     * @function create\n     * @memberof Heartbeat\n     * @static\n     * @param {IHeartbeat=} [properties] Properties to set\n     * @returns {Heartbeat} Heartbeat instance\n     */\n    Heartbeat.create = function create(properties) {\n        return new Heartbeat(properties);\n    };\n\n    /**\n     * Encodes the specified Heartbeat message. Does not implicitly {@link Heartbeat.verify|verify} messages.\n     * @function encode\n     * @memberof Heartbeat\n     * @static\n     * @param {IHeartbeat} message Heartbeat message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Heartbeat.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Heartbeat message, length delimited. Does not implicitly {@link Heartbeat.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Heartbeat\n     * @static\n     * @param {IHeartbeat} message Heartbeat message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Heartbeat.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Heartbeat message from the specified reader or buffer.\n     * @function decode\n     * @memberof Heartbeat\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Heartbeat} Heartbeat\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Heartbeat.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Heartbeat();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Heartbeat message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Heartbeat\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Heartbeat} Heartbeat\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Heartbeat.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Heartbeat message.\n     * @function verify\n     * @memberof Heartbeat\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Heartbeat.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a Heartbeat message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Heartbeat\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Heartbeat} Heartbeat\n     */\n    Heartbeat.fromObject = function fromObject(object) {\n        if (object instanceof $root.Heartbeat)\n            return object;\n        return new $root.Heartbeat();\n    };\n\n    /**\n     * Creates a plain object from a Heartbeat message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Heartbeat\n     * @static\n     * @param {Heartbeat} message Heartbeat\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Heartbeat.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this Heartbeat to JSON.\n     * @function toJSON\n     * @memberof Heartbeat\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Heartbeat.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Heartbeat;\n})();\n\n$root.SetDevice = (function() {\n\n    /**\n     * Properties of a SetDevice.\n     * @exports ISetDevice\n     * @interface ISetDevice\n     * @property {string|null} [deviceId] SetDevice deviceId\n     * @property {IDevice|null} [device] SetDevice device\n     */\n\n    /**\n     * Constructs a new SetDevice.\n     * @exports SetDevice\n     * @classdesc Represents a SetDevice.\n     * @implements ISetDevice\n     * @constructor\n     * @param {ISetDevice=} [properties] Properties to set\n     */\n    function SetDevice(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetDevice deviceId.\n     * @member {string} deviceId\n     * @memberof SetDevice\n     * @instance\n     */\n    SetDevice.prototype.deviceId = \"\";\n\n    /**\n     * SetDevice device.\n     * @member {IDevice|null|undefined} device\n     * @memberof SetDevice\n     * @instance\n     */\n    SetDevice.prototype.device = null;\n\n    /**\n     * Creates a new SetDevice instance using the specified properties.\n     * @function create\n     * @memberof SetDevice\n     * @static\n     * @param {ISetDevice=} [properties] Properties to set\n     * @returns {SetDevice} SetDevice instance\n     */\n    SetDevice.create = function create(properties) {\n        return new SetDevice(properties);\n    };\n\n    /**\n     * Encodes the specified SetDevice message. Does not implicitly {@link SetDevice.verify|verify} messages.\n     * @function encode\n     * @memberof SetDevice\n     * @static\n     * @param {ISetDevice} message SetDevice message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetDevice.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.deviceId);\n        if (message.device != null && Object.hasOwnProperty.call(message, \"device\"))\n            $root.Device.encode(message.device, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetDevice message, length delimited. Does not implicitly {@link SetDevice.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetDevice\n     * @static\n     * @param {ISetDevice} message SetDevice message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetDevice.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetDevice message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetDevice\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetDevice} SetDevice\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetDevice.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetDevice();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.deviceId = reader.string();\n                break;\n            case 2:\n                message.device = $root.Device.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetDevice message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetDevice\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetDevice} SetDevice\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetDevice.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetDevice message.\n     * @function verify\n     * @memberof SetDevice\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetDevice.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        if (message.device != null && message.hasOwnProperty(\"device\")) {\n            var error = $root.Device.verify(message.device);\n            if (error)\n                return \"device.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SetDevice message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetDevice\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetDevice} SetDevice\n     */\n    SetDevice.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetDevice)\n            return object;\n        var message = new $root.SetDevice();\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        if (object.device != null) {\n            if (typeof object.device !== \"object\")\n                throw TypeError(\".SetDevice.device: object expected\");\n            message.device = $root.Device.fromObject(object.device);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetDevice message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetDevice\n     * @static\n     * @param {SetDevice} message SetDevice\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetDevice.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.deviceId = \"\";\n            object.device = null;\n        }\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        if (message.device != null && message.hasOwnProperty(\"device\"))\n            object.device = $root.Device.toObject(message.device, options);\n        return object;\n    };\n\n    /**\n     * Converts this SetDevice to JSON.\n     * @function toJSON\n     * @memberof SetDevice\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetDevice.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetDevice;\n})();\n\n$root.RemoveDevice = (function() {\n\n    /**\n     * Properties of a RemoveDevice.\n     * @exports IRemoveDevice\n     * @interface IRemoveDevice\n     * @property {string|null} [id] RemoveDevice id\n     */\n\n    /**\n     * Constructs a new RemoveDevice.\n     * @exports RemoveDevice\n     * @classdesc Represents a RemoveDevice.\n     * @implements IRemoveDevice\n     * @constructor\n     * @param {IRemoveDevice=} [properties] Properties to set\n     */\n    function RemoveDevice(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * RemoveDevice id.\n     * @member {string} id\n     * @memberof RemoveDevice\n     * @instance\n     */\n    RemoveDevice.prototype.id = \"\";\n\n    /**\n     * Creates a new RemoveDevice instance using the specified properties.\n     * @function create\n     * @memberof RemoveDevice\n     * @static\n     * @param {IRemoveDevice=} [properties] Properties to set\n     * @returns {RemoveDevice} RemoveDevice instance\n     */\n    RemoveDevice.create = function create(properties) {\n        return new RemoveDevice(properties);\n    };\n\n    /**\n     * Encodes the specified RemoveDevice message. Does not implicitly {@link RemoveDevice.verify|verify} messages.\n     * @function encode\n     * @memberof RemoveDevice\n     * @static\n     * @param {IRemoveDevice} message RemoveDevice message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RemoveDevice.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RemoveDevice message, length delimited. Does not implicitly {@link RemoveDevice.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RemoveDevice\n     * @static\n     * @param {IRemoveDevice} message RemoveDevice message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RemoveDevice.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RemoveDevice message from the specified reader or buffer.\n     * @function decode\n     * @memberof RemoveDevice\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RemoveDevice} RemoveDevice\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RemoveDevice.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RemoveDevice();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RemoveDevice message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RemoveDevice\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RemoveDevice} RemoveDevice\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RemoveDevice.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RemoveDevice message.\n     * @function verify\n     * @memberof RemoveDevice\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RemoveDevice.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a RemoveDevice message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RemoveDevice\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RemoveDevice} RemoveDevice\n     */\n    RemoveDevice.fromObject = function fromObject(object) {\n        if (object instanceof $root.RemoveDevice)\n            return object;\n        var message = new $root.RemoveDevice();\n        if (object.id != null)\n            message.id = String(object.id);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a RemoveDevice message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RemoveDevice\n     * @static\n     * @param {RemoveDevice} message RemoveDevice\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RemoveDevice.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.id = \"\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        return object;\n    };\n\n    /**\n     * Converts this RemoveDevice to JSON.\n     * @function toJSON\n     * @memberof RemoveDevice\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RemoveDevice.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RemoveDevice;\n})();\n\n$root.SetWebRTCStream = (function() {\n\n    /**\n     * Properties of a SetWebRTCStream.\n     * @exports ISetWebRTCStream\n     * @interface ISetWebRTCStream\n     * @property {string|null} [deviceId] SetWebRTCStream deviceId\n     * @property {Array.<IWebRTCStream>|null} [streams] SetWebRTCStream streams\n     */\n\n    /**\n     * Constructs a new SetWebRTCStream.\n     * @exports SetWebRTCStream\n     * @classdesc Represents a SetWebRTCStream.\n     * @implements ISetWebRTCStream\n     * @constructor\n     * @param {ISetWebRTCStream=} [properties] Properties to set\n     */\n    function SetWebRTCStream(properties) {\n        this.streams = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetWebRTCStream deviceId.\n     * @member {string} deviceId\n     * @memberof SetWebRTCStream\n     * @instance\n     */\n    SetWebRTCStream.prototype.deviceId = \"\";\n\n    /**\n     * SetWebRTCStream streams.\n     * @member {Array.<IWebRTCStream>} streams\n     * @memberof SetWebRTCStream\n     * @instance\n     */\n    SetWebRTCStream.prototype.streams = $util.emptyArray;\n\n    /**\n     * Creates a new SetWebRTCStream instance using the specified properties.\n     * @function create\n     * @memberof SetWebRTCStream\n     * @static\n     * @param {ISetWebRTCStream=} [properties] Properties to set\n     * @returns {SetWebRTCStream} SetWebRTCStream instance\n     */\n    SetWebRTCStream.create = function create(properties) {\n        return new SetWebRTCStream(properties);\n    };\n\n    /**\n     * Encodes the specified SetWebRTCStream message. Does not implicitly {@link SetWebRTCStream.verify|verify} messages.\n     * @function encode\n     * @memberof SetWebRTCStream\n     * @static\n     * @param {ISetWebRTCStream} message SetWebRTCStream message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetWebRTCStream.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.deviceId);\n        if (message.streams != null && message.streams.length)\n            for (var i = 0; i < message.streams.length; ++i)\n                $root.WebRTCStream.encode(message.streams[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetWebRTCStream message, length delimited. Does not implicitly {@link SetWebRTCStream.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetWebRTCStream\n     * @static\n     * @param {ISetWebRTCStream} message SetWebRTCStream message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetWebRTCStream.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetWebRTCStream message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetWebRTCStream\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetWebRTCStream} SetWebRTCStream\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetWebRTCStream.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetWebRTCStream();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.deviceId = reader.string();\n                break;\n            case 2:\n                if (!(message.streams && message.streams.length))\n                    message.streams = [];\n                message.streams.push($root.WebRTCStream.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetWebRTCStream message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetWebRTCStream\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetWebRTCStream} SetWebRTCStream\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetWebRTCStream.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetWebRTCStream message.\n     * @function verify\n     * @memberof SetWebRTCStream\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetWebRTCStream.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        if (message.streams != null && message.hasOwnProperty(\"streams\")) {\n            if (!Array.isArray(message.streams))\n                return \"streams: array expected\";\n            for (var i = 0; i < message.streams.length; ++i) {\n                var error = $root.WebRTCStream.verify(message.streams[i]);\n                if (error)\n                    return \"streams.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SetWebRTCStream message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetWebRTCStream\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetWebRTCStream} SetWebRTCStream\n     */\n    SetWebRTCStream.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetWebRTCStream)\n            return object;\n        var message = new $root.SetWebRTCStream();\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        if (object.streams) {\n            if (!Array.isArray(object.streams))\n                throw TypeError(\".SetWebRTCStream.streams: array expected\");\n            message.streams = [];\n            for (var i = 0; i < object.streams.length; ++i) {\n                if (typeof object.streams[i] !== \"object\")\n                    throw TypeError(\".SetWebRTCStream.streams: object expected\");\n                message.streams[i] = $root.WebRTCStream.fromObject(object.streams[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetWebRTCStream message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetWebRTCStream\n     * @static\n     * @param {SetWebRTCStream} message SetWebRTCStream\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetWebRTCStream.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.streams = [];\n        if (options.defaults)\n            object.deviceId = \"\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        if (message.streams && message.streams.length) {\n            object.streams = [];\n            for (var j = 0; j < message.streams.length; ++j)\n                object.streams[j] = $root.WebRTCStream.toObject(message.streams[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SetWebRTCStream to JSON.\n     * @function toJSON\n     * @memberof SetWebRTCStream\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetWebRTCStream.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetWebRTCStream;\n})();\n\n$root.SetActivityStream = (function() {\n\n    /**\n     * Properties of a SetActivityStream.\n     * @exports ISetActivityStream\n     * @interface ISetActivityStream\n     * @property {string|null} [deviceId] SetActivityStream deviceId\n     * @property {string|null} [activityId] SetActivityStream activityId\n     * @property {string|null} [activityStreamId] SetActivityStream activityStreamId\n     */\n\n    /**\n     * Constructs a new SetActivityStream.\n     * @exports SetActivityStream\n     * @classdesc Represents a SetActivityStream.\n     * @implements ISetActivityStream\n     * @constructor\n     * @param {ISetActivityStream=} [properties] Properties to set\n     */\n    function SetActivityStream(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetActivityStream deviceId.\n     * @member {string} deviceId\n     * @memberof SetActivityStream\n     * @instance\n     */\n    SetActivityStream.prototype.deviceId = \"\";\n\n    /**\n     * SetActivityStream activityId.\n     * @member {string} activityId\n     * @memberof SetActivityStream\n     * @instance\n     */\n    SetActivityStream.prototype.activityId = \"\";\n\n    /**\n     * SetActivityStream activityStreamId.\n     * @member {string} activityStreamId\n     * @memberof SetActivityStream\n     * @instance\n     */\n    SetActivityStream.prototype.activityStreamId = \"\";\n\n    /**\n     * Creates a new SetActivityStream instance using the specified properties.\n     * @function create\n     * @memberof SetActivityStream\n     * @static\n     * @param {ISetActivityStream=} [properties] Properties to set\n     * @returns {SetActivityStream} SetActivityStream instance\n     */\n    SetActivityStream.create = function create(properties) {\n        return new SetActivityStream(properties);\n    };\n\n    /**\n     * Encodes the specified SetActivityStream message. Does not implicitly {@link SetActivityStream.verify|verify} messages.\n     * @function encode\n     * @memberof SetActivityStream\n     * @static\n     * @param {ISetActivityStream} message SetActivityStream message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetActivityStream.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.deviceId);\n        if (message.activityId != null && Object.hasOwnProperty.call(message, \"activityId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.activityId);\n        if (message.activityStreamId != null && Object.hasOwnProperty.call(message, \"activityStreamId\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.activityStreamId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetActivityStream message, length delimited. Does not implicitly {@link SetActivityStream.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetActivityStream\n     * @static\n     * @param {ISetActivityStream} message SetActivityStream message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetActivityStream.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetActivityStream message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetActivityStream\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetActivityStream} SetActivityStream\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetActivityStream.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetActivityStream();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.deviceId = reader.string();\n                break;\n            case 2:\n                message.activityId = reader.string();\n                break;\n            case 3:\n                message.activityStreamId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetActivityStream message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetActivityStream\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetActivityStream} SetActivityStream\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetActivityStream.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetActivityStream message.\n     * @function verify\n     * @memberof SetActivityStream\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetActivityStream.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        if (message.activityId != null && message.hasOwnProperty(\"activityId\"))\n            if (!$util.isString(message.activityId))\n                return \"activityId: string expected\";\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            if (!$util.isString(message.activityStreamId))\n                return \"activityStreamId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SetActivityStream message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetActivityStream\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetActivityStream} SetActivityStream\n     */\n    SetActivityStream.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetActivityStream)\n            return object;\n        var message = new $root.SetActivityStream();\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        if (object.activityId != null)\n            message.activityId = String(object.activityId);\n        if (object.activityStreamId != null)\n            message.activityStreamId = String(object.activityStreamId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetActivityStream message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetActivityStream\n     * @static\n     * @param {SetActivityStream} message SetActivityStream\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetActivityStream.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.deviceId = \"\";\n            object.activityId = \"\";\n            object.activityStreamId = \"\";\n        }\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        if (message.activityId != null && message.hasOwnProperty(\"activityId\"))\n            object.activityId = message.activityId;\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            object.activityStreamId = message.activityStreamId;\n        return object;\n    };\n\n    /**\n     * Converts this SetActivityStream to JSON.\n     * @function toJSON\n     * @memberof SetActivityStream\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetActivityStream.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetActivityStream;\n})();\n\n$root.SetHost = (function() {\n\n    /**\n     * Properties of a SetHost.\n     * @exports ISetHost\n     * @interface ISetHost\n     * @property {string|null} [id] SetHost id\n     */\n\n    /**\n     * Constructs a new SetHost.\n     * @exports SetHost\n     * @classdesc Represents a SetHost.\n     * @implements ISetHost\n     * @constructor\n     * @param {ISetHost=} [properties] Properties to set\n     */\n    function SetHost(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetHost id.\n     * @member {string} id\n     * @memberof SetHost\n     * @instance\n     */\n    SetHost.prototype.id = \"\";\n\n    /**\n     * Creates a new SetHost instance using the specified properties.\n     * @function create\n     * @memberof SetHost\n     * @static\n     * @param {ISetHost=} [properties] Properties to set\n     * @returns {SetHost} SetHost instance\n     */\n    SetHost.create = function create(properties) {\n        return new SetHost(properties);\n    };\n\n    /**\n     * Encodes the specified SetHost message. Does not implicitly {@link SetHost.verify|verify} messages.\n     * @function encode\n     * @memberof SetHost\n     * @static\n     * @param {ISetHost} message SetHost message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetHost.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetHost message, length delimited. Does not implicitly {@link SetHost.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetHost\n     * @static\n     * @param {ISetHost} message SetHost message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetHost.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetHost message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetHost\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetHost} SetHost\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetHost.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetHost();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetHost message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetHost\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetHost} SetHost\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetHost.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetHost message.\n     * @function verify\n     * @memberof SetHost\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetHost.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SetHost message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetHost\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetHost} SetHost\n     */\n    SetHost.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetHost)\n            return object;\n        var message = new $root.SetHost();\n        if (object.id != null)\n            message.id = String(object.id);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetHost message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetHost\n     * @static\n     * @param {SetHost} message SetHost\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetHost.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.id = \"\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        return object;\n    };\n\n    /**\n     * Converts this SetHost to JSON.\n     * @function toJSON\n     * @memberof SetHost\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetHost.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetHost;\n})();\n\n$root.AddTrophy = (function() {\n\n    /**\n     * Properties of an AddTrophy.\n     * @exports IAddTrophy\n     * @interface IAddTrophy\n     * @property {string|null} [trophyId] AddTrophy trophyId\n     * @property {number|Long|null} [timestamp] AddTrophy timestamp\n     * @property {string|null} [userId] AddTrophy userId\n     */\n\n    /**\n     * Constructs a new AddTrophy.\n     * @exports AddTrophy\n     * @classdesc Represents an AddTrophy.\n     * @implements IAddTrophy\n     * @constructor\n     * @param {IAddTrophy=} [properties] Properties to set\n     */\n    function AddTrophy(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AddTrophy trophyId.\n     * @member {string} trophyId\n     * @memberof AddTrophy\n     * @instance\n     */\n    AddTrophy.prototype.trophyId = \"\";\n\n    /**\n     * AddTrophy timestamp.\n     * @member {number|Long} timestamp\n     * @memberof AddTrophy\n     * @instance\n     */\n    AddTrophy.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * AddTrophy userId.\n     * @member {string} userId\n     * @memberof AddTrophy\n     * @instance\n     */\n    AddTrophy.prototype.userId = \"\";\n\n    /**\n     * Creates a new AddTrophy instance using the specified properties.\n     * @function create\n     * @memberof AddTrophy\n     * @static\n     * @param {IAddTrophy=} [properties] Properties to set\n     * @returns {AddTrophy} AddTrophy instance\n     */\n    AddTrophy.create = function create(properties) {\n        return new AddTrophy(properties);\n    };\n\n    /**\n     * Encodes the specified AddTrophy message. Does not implicitly {@link AddTrophy.verify|verify} messages.\n     * @function encode\n     * @memberof AddTrophy\n     * @static\n     * @param {IAddTrophy} message AddTrophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddTrophy.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophyId != null && Object.hasOwnProperty.call(message, \"trophyId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trophyId);\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.timestamp);\n        if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.userId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AddTrophy message, length delimited. Does not implicitly {@link AddTrophy.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AddTrophy\n     * @static\n     * @param {IAddTrophy} message AddTrophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddTrophy.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AddTrophy message from the specified reader or buffer.\n     * @function decode\n     * @memberof AddTrophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AddTrophy} AddTrophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddTrophy.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AddTrophy();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophyId = reader.string();\n                break;\n            case 2:\n                message.timestamp = reader.uint64();\n                break;\n            case 3:\n                message.userId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AddTrophy message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AddTrophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AddTrophy} AddTrophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddTrophy.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AddTrophy message.\n     * @function verify\n     * @memberof AddTrophy\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AddTrophy.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophyId != null && message.hasOwnProperty(\"trophyId\"))\n            if (!$util.isString(message.trophyId))\n                return \"trophyId: string expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp) && !(message.timestamp && $util.isInteger(message.timestamp.low) && $util.isInteger(message.timestamp.high)))\n                return \"timestamp: integer|Long expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isString(message.userId))\n                return \"userId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an AddTrophy message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AddTrophy\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AddTrophy} AddTrophy\n     */\n    AddTrophy.fromObject = function fromObject(object) {\n        if (object instanceof $root.AddTrophy)\n            return object;\n        var message = new $root.AddTrophy();\n        if (object.trophyId != null)\n            message.trophyId = String(object.trophyId);\n        if (object.timestamp != null)\n            if ($util.Long)\n                (message.timestamp = $util.Long.fromValue(object.timestamp)).unsigned = true;\n            else if (typeof object.timestamp === \"string\")\n                message.timestamp = parseInt(object.timestamp, 10);\n            else if (typeof object.timestamp === \"number\")\n                message.timestamp = object.timestamp;\n            else if (typeof object.timestamp === \"object\")\n                message.timestamp = new $util.LongBits(object.timestamp.low >>> 0, object.timestamp.high >>> 0).toNumber(true);\n        if (object.userId != null)\n            message.userId = String(object.userId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AddTrophy message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AddTrophy\n     * @static\n     * @param {AddTrophy} message AddTrophy\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AddTrophy.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.trophyId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestamp = options.longs === String ? \"0\" : 0;\n            object.userId = \"\";\n        }\n        if (message.trophyId != null && message.hasOwnProperty(\"trophyId\"))\n            object.trophyId = message.trophyId;\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (typeof message.timestamp === \"number\")\n                object.timestamp = options.longs === String ? String(message.timestamp) : message.timestamp;\n            else\n                object.timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timestamp) : options.longs === Number ? new $util.LongBits(message.timestamp.low >>> 0, message.timestamp.high >>> 0).toNumber(true) : message.timestamp;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        return object;\n    };\n\n    /**\n     * Converts this AddTrophy to JSON.\n     * @function toJSON\n     * @memberof AddTrophy\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AddTrophy.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AddTrophy;\n})();\n\n$root.SetContent = (function() {\n\n    /**\n     * Properties of a SetContent.\n     * @exports ISetContent\n     * @interface ISetContent\n     * @property {IContent|null} [content] SetContent content\n     */\n\n    /**\n     * Constructs a new SetContent.\n     * @exports SetContent\n     * @classdesc Represents a SetContent.\n     * @implements ISetContent\n     * @constructor\n     * @param {ISetContent=} [properties] Properties to set\n     */\n    function SetContent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetContent content.\n     * @member {IContent|null|undefined} content\n     * @memberof SetContent\n     * @instance\n     */\n    SetContent.prototype.content = null;\n\n    /**\n     * Creates a new SetContent instance using the specified properties.\n     * @function create\n     * @memberof SetContent\n     * @static\n     * @param {ISetContent=} [properties] Properties to set\n     * @returns {SetContent} SetContent instance\n     */\n    SetContent.create = function create(properties) {\n        return new SetContent(properties);\n    };\n\n    /**\n     * Encodes the specified SetContent message. Does not implicitly {@link SetContent.verify|verify} messages.\n     * @function encode\n     * @memberof SetContent\n     * @static\n     * @param {ISetContent} message SetContent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetContent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetContent message, length delimited. Does not implicitly {@link SetContent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetContent\n     * @static\n     * @param {ISetContent} message SetContent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetContent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetContent message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetContent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetContent} SetContent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetContent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetContent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetContent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetContent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetContent} SetContent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetContent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetContent message.\n     * @function verify\n     * @memberof SetContent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetContent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SetContent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetContent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetContent} SetContent\n     */\n    SetContent.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetContent)\n            return object;\n        var message = new $root.SetContent();\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".SetContent.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetContent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetContent\n     * @static\n     * @param {SetContent} message SetContent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetContent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.content = null;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        return object;\n    };\n\n    /**\n     * Converts this SetContent to JSON.\n     * @function toJSON\n     * @memberof SetContent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetContent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetContent;\n})();\n\n$root.SendChatMessage = (function() {\n\n    /**\n     * Properties of a SendChatMessage.\n     * @exports ISendChatMessage\n     * @interface ISendChatMessage\n     * @property {string|null} [message] SendChatMessage message\n     */\n\n    /**\n     * Constructs a new SendChatMessage.\n     * @exports SendChatMessage\n     * @classdesc Represents a SendChatMessage.\n     * @implements ISendChatMessage\n     * @constructor\n     * @param {ISendChatMessage=} [properties] Properties to set\n     */\n    function SendChatMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SendChatMessage message.\n     * @member {string} message\n     * @memberof SendChatMessage\n     * @instance\n     */\n    SendChatMessage.prototype.message = \"\";\n\n    /**\n     * Creates a new SendChatMessage instance using the specified properties.\n     * @function create\n     * @memberof SendChatMessage\n     * @static\n     * @param {ISendChatMessage=} [properties] Properties to set\n     * @returns {SendChatMessage} SendChatMessage instance\n     */\n    SendChatMessage.create = function create(properties) {\n        return new SendChatMessage(properties);\n    };\n\n    /**\n     * Encodes the specified SendChatMessage message. Does not implicitly {@link SendChatMessage.verify|verify} messages.\n     * @function encode\n     * @memberof SendChatMessage\n     * @static\n     * @param {ISendChatMessage} message SendChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SendChatMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.message != null && Object.hasOwnProperty.call(message, \"message\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SendChatMessage message, length delimited. Does not implicitly {@link SendChatMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SendChatMessage\n     * @static\n     * @param {ISendChatMessage} message SendChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SendChatMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SendChatMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof SendChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SendChatMessage} SendChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SendChatMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SendChatMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.message = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SendChatMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SendChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SendChatMessage} SendChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SendChatMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SendChatMessage message.\n     * @function verify\n     * @memberof SendChatMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SendChatMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            if (!$util.isString(message.message))\n                return \"message: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SendChatMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SendChatMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SendChatMessage} SendChatMessage\n     */\n    SendChatMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.SendChatMessage)\n            return object;\n        var message = new $root.SendChatMessage();\n        if (object.message != null)\n            message.message = String(object.message);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SendChatMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SendChatMessage\n     * @static\n     * @param {SendChatMessage} message SendChatMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SendChatMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.message = \"\";\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            object.message = message.message;\n        return object;\n    };\n\n    /**\n     * Converts this SendChatMessage to JSON.\n     * @function toJSON\n     * @memberof SendChatMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SendChatMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SendChatMessage;\n})();\n\n$root.StateChanges = (function() {\n\n    /**\n     * Properties of a StateChanges.\n     * @exports IStateChanges\n     * @interface IStateChanges\n     * @property {Array.<IStateDiff>|null} [changes] StateChanges changes\n     */\n\n    /**\n     * Constructs a new StateChanges.\n     * @exports StateChanges\n     * @classdesc Represents a StateChanges.\n     * @implements IStateChanges\n     * @constructor\n     * @param {IStateChanges=} [properties] Properties to set\n     */\n    function StateChanges(properties) {\n        this.changes = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * StateChanges changes.\n     * @member {Array.<IStateDiff>} changes\n     * @memberof StateChanges\n     * @instance\n     */\n    StateChanges.prototype.changes = $util.emptyArray;\n\n    /**\n     * Creates a new StateChanges instance using the specified properties.\n     * @function create\n     * @memberof StateChanges\n     * @static\n     * @param {IStateChanges=} [properties] Properties to set\n     * @returns {StateChanges} StateChanges instance\n     */\n    StateChanges.create = function create(properties) {\n        return new StateChanges(properties);\n    };\n\n    /**\n     * Encodes the specified StateChanges message. Does not implicitly {@link StateChanges.verify|verify} messages.\n     * @function encode\n     * @memberof StateChanges\n     * @static\n     * @param {IStateChanges} message StateChanges message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StateChanges.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.changes != null && message.changes.length)\n            for (var i = 0; i < message.changes.length; ++i)\n                $root.StateDiff.encode(message.changes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified StateChanges message, length delimited. Does not implicitly {@link StateChanges.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof StateChanges\n     * @static\n     * @param {IStateChanges} message StateChanges message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StateChanges.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a StateChanges message from the specified reader or buffer.\n     * @function decode\n     * @memberof StateChanges\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {StateChanges} StateChanges\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StateChanges.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StateChanges();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.changes && message.changes.length))\n                    message.changes = [];\n                message.changes.push($root.StateDiff.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a StateChanges message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof StateChanges\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {StateChanges} StateChanges\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StateChanges.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a StateChanges message.\n     * @function verify\n     * @memberof StateChanges\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    StateChanges.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.changes != null && message.hasOwnProperty(\"changes\")) {\n            if (!Array.isArray(message.changes))\n                return \"changes: array expected\";\n            for (var i = 0; i < message.changes.length; ++i) {\n                var error = $root.StateDiff.verify(message.changes[i]);\n                if (error)\n                    return \"changes.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a StateChanges message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof StateChanges\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {StateChanges} StateChanges\n     */\n    StateChanges.fromObject = function fromObject(object) {\n        if (object instanceof $root.StateChanges)\n            return object;\n        var message = new $root.StateChanges();\n        if (object.changes) {\n            if (!Array.isArray(object.changes))\n                throw TypeError(\".StateChanges.changes: array expected\");\n            message.changes = [];\n            for (var i = 0; i < object.changes.length; ++i) {\n                if (typeof object.changes[i] !== \"object\")\n                    throw TypeError(\".StateChanges.changes: object expected\");\n                message.changes[i] = $root.StateDiff.fromObject(object.changes[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a StateChanges message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof StateChanges\n     * @static\n     * @param {StateChanges} message StateChanges\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    StateChanges.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.changes = [];\n        if (message.changes && message.changes.length) {\n            object.changes = [];\n            for (var j = 0; j < message.changes.length; ++j)\n                object.changes[j] = $root.StateDiff.toObject(message.changes[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this StateChanges to JSON.\n     * @function toJSON\n     * @memberof StateChanges\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    StateChanges.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return StateChanges;\n})();\n\n$root.StateDiff = (function() {\n\n    /**\n     * Properties of a StateDiff.\n     * @exports IStateDiff\n     * @interface IStateDiff\n     * @property {IState|null} [setState] StateDiff setState\n     * @property {IAddParticipants|null} [addParticipants] StateDiff addParticipants\n     * @property {IRemoveParticipants|null} [removeParticipants] StateDiff removeParticipants\n     * @property {IChangeContent|null} [changeContent] StateDiff changeContent\n     * @property {IChangeHost|null} [changeHost] StateDiff changeHost\n     * @property {IAppendChatMessage|null} [appendChatMessage] StateDiff appendChatMessage\n     * @property {IReceiveTrophy|null} [receiveTrophy] StateDiff receiveTrophy\n     * @property {IClassEnded|null} [classEnded] StateDiff classEnded\n     */\n\n    /**\n     * Constructs a new StateDiff.\n     * @exports StateDiff\n     * @classdesc Represents a StateDiff.\n     * @implements IStateDiff\n     * @constructor\n     * @param {IStateDiff=} [properties] Properties to set\n     */\n    function StateDiff(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * StateDiff setState.\n     * @member {IState|null|undefined} setState\n     * @memberof StateDiff\n     * @instance\n     */\n    StateDiff.prototype.setState = null;\n\n    /**\n     * StateDiff addParticipants.\n     * @member {IAddParticipants|null|undefined} addParticipants\n     * @memberof StateDiff\n     * @instance\n     */\n    StateDiff.prototype.addParticipants = null;\n\n    /**\n     * StateDiff removeParticipants.\n     * @member {IRemoveParticipants|null|undefined} removeParticipants\n     * @memberof StateDiff\n     * @instance\n     */\n    StateDiff.prototype.removeParticipants = null;\n\n    /**\n     * StateDiff changeContent.\n     * @member {IChangeContent|null|undefined} changeContent\n     * @memberof StateDiff\n     * @instance\n     */\n    StateDiff.prototype.changeContent = null;\n\n    /**\n     * StateDiff changeHost.\n     * @member {IChangeHost|null|undefined} changeHost\n     * @memberof StateDiff\n     * @instance\n     */\n    StateDiff.prototype.changeHost = null;\n\n    /**\n     * StateDiff appendChatMessage.\n     * @member {IAppendChatMessage|null|undefined} appendChatMessage\n     * @memberof StateDiff\n     * @instance\n     */\n    StateDiff.prototype.appendChatMessage = null;\n\n    /**\n     * StateDiff receiveTrophy.\n     * @member {IReceiveTrophy|null|undefined} receiveTrophy\n     * @memberof StateDiff\n     * @instance\n     */\n    StateDiff.prototype.receiveTrophy = null;\n\n    /**\n     * StateDiff classEnded.\n     * @member {IClassEnded|null|undefined} classEnded\n     * @memberof StateDiff\n     * @instance\n     */\n    StateDiff.prototype.classEnded = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * StateDiff action.\n     * @member {\"setState\"|\"addParticipants\"|\"removeParticipants\"|\"changeContent\"|\"changeHost\"|\"appendChatMessage\"|\"receiveTrophy\"|\"classEnded\"|undefined} action\n     * @memberof StateDiff\n     * @instance\n     */\n    Object.defineProperty(StateDiff.prototype, \"action\", {\n        get: $util.oneOfGetter($oneOfFields = [\"setState\", \"addParticipants\", \"removeParticipants\", \"changeContent\", \"changeHost\", \"appendChatMessage\", \"receiveTrophy\", \"classEnded\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Creates a new StateDiff instance using the specified properties.\n     * @function create\n     * @memberof StateDiff\n     * @static\n     * @param {IStateDiff=} [properties] Properties to set\n     * @returns {StateDiff} StateDiff instance\n     */\n    StateDiff.create = function create(properties) {\n        return new StateDiff(properties);\n    };\n\n    /**\n     * Encodes the specified StateDiff message. Does not implicitly {@link StateDiff.verify|verify} messages.\n     * @function encode\n     * @memberof StateDiff\n     * @static\n     * @param {IStateDiff} message StateDiff message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StateDiff.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.setState != null && Object.hasOwnProperty.call(message, \"setState\"))\n            $root.State.encode(message.setState, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.addParticipants != null && Object.hasOwnProperty.call(message, \"addParticipants\"))\n            $root.AddParticipants.encode(message.addParticipants, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.removeParticipants != null && Object.hasOwnProperty.call(message, \"removeParticipants\"))\n            $root.RemoveParticipants.encode(message.removeParticipants, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.changeContent != null && Object.hasOwnProperty.call(message, \"changeContent\"))\n            $root.ChangeContent.encode(message.changeContent, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.changeHost != null && Object.hasOwnProperty.call(message, \"changeHost\"))\n            $root.ChangeHost.encode(message.changeHost, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.appendChatMessage != null && Object.hasOwnProperty.call(message, \"appendChatMessage\"))\n            $root.AppendChatMessage.encode(message.appendChatMessage, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.receiveTrophy != null && Object.hasOwnProperty.call(message, \"receiveTrophy\"))\n            $root.ReceiveTrophy.encode(message.receiveTrophy, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.classEnded != null && Object.hasOwnProperty.call(message, \"classEnded\"))\n            $root.ClassEnded.encode(message.classEnded, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified StateDiff message, length delimited. Does not implicitly {@link StateDiff.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof StateDiff\n     * @static\n     * @param {IStateDiff} message StateDiff message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StateDiff.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a StateDiff message from the specified reader or buffer.\n     * @function decode\n     * @memberof StateDiff\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {StateDiff} StateDiff\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StateDiff.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StateDiff();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.setState = $root.State.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.addParticipants = $root.AddParticipants.decode(reader, reader.uint32());\n                break;\n            case 3:\n                message.removeParticipants = $root.RemoveParticipants.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.changeContent = $root.ChangeContent.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.changeHost = $root.ChangeHost.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.appendChatMessage = $root.AppendChatMessage.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.receiveTrophy = $root.ReceiveTrophy.decode(reader, reader.uint32());\n                break;\n            case 16:\n                message.classEnded = $root.ClassEnded.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a StateDiff message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof StateDiff\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {StateDiff} StateDiff\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StateDiff.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a StateDiff message.\n     * @function verify\n     * @memberof StateDiff\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    StateDiff.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        var properties = {};\n        if (message.setState != null && message.hasOwnProperty(\"setState\")) {\n            properties.action = 1;\n            {\n                var error = $root.State.verify(message.setState);\n                if (error)\n                    return \"setState.\" + error;\n            }\n        }\n        if (message.addParticipants != null && message.hasOwnProperty(\"addParticipants\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.AddParticipants.verify(message.addParticipants);\n                if (error)\n                    return \"addParticipants.\" + error;\n            }\n        }\n        if (message.removeParticipants != null && message.hasOwnProperty(\"removeParticipants\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.RemoveParticipants.verify(message.removeParticipants);\n                if (error)\n                    return \"removeParticipants.\" + error;\n            }\n        }\n        if (message.changeContent != null && message.hasOwnProperty(\"changeContent\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.ChangeContent.verify(message.changeContent);\n                if (error)\n                    return \"changeContent.\" + error;\n            }\n        }\n        if (message.changeHost != null && message.hasOwnProperty(\"changeHost\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.ChangeHost.verify(message.changeHost);\n                if (error)\n                    return \"changeHost.\" + error;\n            }\n        }\n        if (message.appendChatMessage != null && message.hasOwnProperty(\"appendChatMessage\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.AppendChatMessage.verify(message.appendChatMessage);\n                if (error)\n                    return \"appendChatMessage.\" + error;\n            }\n        }\n        if (message.receiveTrophy != null && message.hasOwnProperty(\"receiveTrophy\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.ReceiveTrophy.verify(message.receiveTrophy);\n                if (error)\n                    return \"receiveTrophy.\" + error;\n            }\n        }\n        if (message.classEnded != null && message.hasOwnProperty(\"classEnded\")) {\n            if (properties.action === 1)\n                return \"action: multiple values\";\n            properties.action = 1;\n            {\n                var error = $root.ClassEnded.verify(message.classEnded);\n                if (error)\n                    return \"classEnded.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a StateDiff message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof StateDiff\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {StateDiff} StateDiff\n     */\n    StateDiff.fromObject = function fromObject(object) {\n        if (object instanceof $root.StateDiff)\n            return object;\n        var message = new $root.StateDiff();\n        if (object.setState != null) {\n            if (typeof object.setState !== \"object\")\n                throw TypeError(\".StateDiff.setState: object expected\");\n            message.setState = $root.State.fromObject(object.setState);\n        }\n        if (object.addParticipants != null) {\n            if (typeof object.addParticipants !== \"object\")\n                throw TypeError(\".StateDiff.addParticipants: object expected\");\n            message.addParticipants = $root.AddParticipants.fromObject(object.addParticipants);\n        }\n        if (object.removeParticipants != null) {\n            if (typeof object.removeParticipants !== \"object\")\n                throw TypeError(\".StateDiff.removeParticipants: object expected\");\n            message.removeParticipants = $root.RemoveParticipants.fromObject(object.removeParticipants);\n        }\n        if (object.changeContent != null) {\n            if (typeof object.changeContent !== \"object\")\n                throw TypeError(\".StateDiff.changeContent: object expected\");\n            message.changeContent = $root.ChangeContent.fromObject(object.changeContent);\n        }\n        if (object.changeHost != null) {\n            if (typeof object.changeHost !== \"object\")\n                throw TypeError(\".StateDiff.changeHost: object expected\");\n            message.changeHost = $root.ChangeHost.fromObject(object.changeHost);\n        }\n        if (object.appendChatMessage != null) {\n            if (typeof object.appendChatMessage !== \"object\")\n                throw TypeError(\".StateDiff.appendChatMessage: object expected\");\n            message.appendChatMessage = $root.AppendChatMessage.fromObject(object.appendChatMessage);\n        }\n        if (object.receiveTrophy != null) {\n            if (typeof object.receiveTrophy !== \"object\")\n                throw TypeError(\".StateDiff.receiveTrophy: object expected\");\n            message.receiveTrophy = $root.ReceiveTrophy.fromObject(object.receiveTrophy);\n        }\n        if (object.classEnded != null) {\n            if (typeof object.classEnded !== \"object\")\n                throw TypeError(\".StateDiff.classEnded: object expected\");\n            message.classEnded = $root.ClassEnded.fromObject(object.classEnded);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a StateDiff message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof StateDiff\n     * @static\n     * @param {StateDiff} message StateDiff\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    StateDiff.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (message.setState != null && message.hasOwnProperty(\"setState\")) {\n            object.setState = $root.State.toObject(message.setState, options);\n            if (options.oneofs)\n                object.action = \"setState\";\n        }\n        if (message.addParticipants != null && message.hasOwnProperty(\"addParticipants\")) {\n            object.addParticipants = $root.AddParticipants.toObject(message.addParticipants, options);\n            if (options.oneofs)\n                object.action = \"addParticipants\";\n        }\n        if (message.removeParticipants != null && message.hasOwnProperty(\"removeParticipants\")) {\n            object.removeParticipants = $root.RemoveParticipants.toObject(message.removeParticipants, options);\n            if (options.oneofs)\n                object.action = \"removeParticipants\";\n        }\n        if (message.changeContent != null && message.hasOwnProperty(\"changeContent\")) {\n            object.changeContent = $root.ChangeContent.toObject(message.changeContent, options);\n            if (options.oneofs)\n                object.action = \"changeContent\";\n        }\n        if (message.changeHost != null && message.hasOwnProperty(\"changeHost\")) {\n            object.changeHost = $root.ChangeHost.toObject(message.changeHost, options);\n            if (options.oneofs)\n                object.action = \"changeHost\";\n        }\n        if (message.appendChatMessage != null && message.hasOwnProperty(\"appendChatMessage\")) {\n            object.appendChatMessage = $root.AppendChatMessage.toObject(message.appendChatMessage, options);\n            if (options.oneofs)\n                object.action = \"appendChatMessage\";\n        }\n        if (message.receiveTrophy != null && message.hasOwnProperty(\"receiveTrophy\")) {\n            object.receiveTrophy = $root.ReceiveTrophy.toObject(message.receiveTrophy, options);\n            if (options.oneofs)\n                object.action = \"receiveTrophy\";\n        }\n        if (message.classEnded != null && message.hasOwnProperty(\"classEnded\")) {\n            object.classEnded = $root.ClassEnded.toObject(message.classEnded, options);\n            if (options.oneofs)\n                object.action = \"classEnded\";\n        }\n        return object;\n    };\n\n    /**\n     * Converts this StateDiff to JSON.\n     * @function toJSON\n     * @memberof StateDiff\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    StateDiff.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return StateDiff;\n})();\n\n$root.Participant = (function() {\n\n    /**\n     * Properties of a Participant.\n     * @exports IParticipant\n     * @interface IParticipant\n     * @property {string|null} [name] Participant name\n     * @property {Object.<string,IDevice>|null} [devices] Participant devices\n     * @property {Array.<ITrophy>|null} [trophies] Participant trophies\n     */\n\n    /**\n     * Constructs a new Participant.\n     * @exports Participant\n     * @classdesc Represents a Participant.\n     * @implements IParticipant\n     * @constructor\n     * @param {IParticipant=} [properties] Properties to set\n     */\n    function Participant(properties) {\n        this.devices = {};\n        this.trophies = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Participant name.\n     * @member {string} name\n     * @memberof Participant\n     * @instance\n     */\n    Participant.prototype.name = \"\";\n\n    /**\n     * Participant devices.\n     * @member {Object.<string,IDevice>} devices\n     * @memberof Participant\n     * @instance\n     */\n    Participant.prototype.devices = $util.emptyObject;\n\n    /**\n     * Participant trophies.\n     * @member {Array.<ITrophy>} trophies\n     * @memberof Participant\n     * @instance\n     */\n    Participant.prototype.trophies = $util.emptyArray;\n\n    /**\n     * Creates a new Participant instance using the specified properties.\n     * @function create\n     * @memberof Participant\n     * @static\n     * @param {IParticipant=} [properties] Properties to set\n     * @returns {Participant} Participant instance\n     */\n    Participant.create = function create(properties) {\n        return new Participant(properties);\n    };\n\n    /**\n     * Encodes the specified Participant message. Does not implicitly {@link Participant.verify|verify} messages.\n     * @function encode\n     * @memberof Participant\n     * @static\n     * @param {IParticipant} message Participant message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Participant.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n        if (message.devices != null && Object.hasOwnProperty.call(message, \"devices\"))\n            for (var keys = Object.keys(message.devices), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 0 =*/8).uint32(keys[i]);\n                $root.Device.encode(message.devices[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        if (message.trophies != null && message.trophies.length)\n            for (var i = 0; i < message.trophies.length; ++i)\n                $root.Trophy.encode(message.trophies[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Participant message, length delimited. Does not implicitly {@link Participant.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Participant\n     * @static\n     * @param {IParticipant} message Participant message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Participant.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Participant message from the specified reader or buffer.\n     * @function decode\n     * @memberof Participant\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Participant} Participant\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Participant.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Participant(), key;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.name = reader.string();\n                break;\n            case 2:\n                reader.skip().pos++;\n                if (message.devices === $util.emptyObject)\n                    message.devices = {};\n                key = reader.uint32();\n                reader.pos++;\n                message.devices[key] = $root.Device.decode(reader, reader.uint32());\n                break;\n            case 3:\n                if (!(message.trophies && message.trophies.length))\n                    message.trophies = [];\n                message.trophies.push($root.Trophy.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Participant message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Participant\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Participant} Participant\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Participant.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Participant message.\n     * @function verify\n     * @memberof Participant\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Participant.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            if (!$util.isString(message.name))\n                return \"name: string expected\";\n        if (message.devices != null && message.hasOwnProperty(\"devices\")) {\n            if (!$util.isObject(message.devices))\n                return \"devices: object expected\";\n            var key = Object.keys(message.devices);\n            for (var i = 0; i < key.length; ++i) {\n                if (!$util.key32Re.test(key[i]))\n                    return \"devices: integer key{k:uint32} expected\";\n                {\n                    var error = $root.Device.verify(message.devices[key[i]]);\n                    if (error)\n                        return \"devices.\" + error;\n                }\n            }\n        }\n        if (message.trophies != null && message.hasOwnProperty(\"trophies\")) {\n            if (!Array.isArray(message.trophies))\n                return \"trophies: array expected\";\n            for (var i = 0; i < message.trophies.length; ++i) {\n                var error = $root.Trophy.verify(message.trophies[i]);\n                if (error)\n                    return \"trophies.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a Participant message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Participant\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Participant} Participant\n     */\n    Participant.fromObject = function fromObject(object) {\n        if (object instanceof $root.Participant)\n            return object;\n        var message = new $root.Participant();\n        if (object.name != null)\n            message.name = String(object.name);\n        if (object.devices) {\n            if (typeof object.devices !== \"object\")\n                throw TypeError(\".Participant.devices: object expected\");\n            message.devices = {};\n            for (var keys = Object.keys(object.devices), i = 0; i < keys.length; ++i) {\n                if (typeof object.devices[keys[i]] !== \"object\")\n                    throw TypeError(\".Participant.devices: object expected\");\n                message.devices[keys[i]] = $root.Device.fromObject(object.devices[keys[i]]);\n            }\n        }\n        if (object.trophies) {\n            if (!Array.isArray(object.trophies))\n                throw TypeError(\".Participant.trophies: array expected\");\n            message.trophies = [];\n            for (var i = 0; i < object.trophies.length; ++i) {\n                if (typeof object.trophies[i] !== \"object\")\n                    throw TypeError(\".Participant.trophies: object expected\");\n                message.trophies[i] = $root.Trophy.fromObject(object.trophies[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Participant message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Participant\n     * @static\n     * @param {Participant} message Participant\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Participant.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.trophies = [];\n        if (options.objects || options.defaults)\n            object.devices = {};\n        if (options.defaults)\n            object.name = \"\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            object.name = message.name;\n        var keys2;\n        if (message.devices && (keys2 = Object.keys(message.devices)).length) {\n            object.devices = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.devices[keys2[j]] = $root.Device.toObject(message.devices[keys2[j]], options);\n        }\n        if (message.trophies && message.trophies.length) {\n            object.trophies = [];\n            for (var j = 0; j < message.trophies.length; ++j)\n                object.trophies[j] = $root.Trophy.toObject(message.trophies[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this Participant to JSON.\n     * @function toJSON\n     * @memberof Participant\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Participant.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Participant;\n})();\n\n$root.State = (function() {\n\n    /**\n     * Properties of a State.\n     * @exports IState\n     * @interface IState\n     * @property {Object.<string,IParticipant>|null} [participants] State participants\n     * @property {string|null} [host] State host\n     * @property {IContent|null} [content] State content\n     * @property {Array.<IChatMessage>|null} [chatMessages] State chatMessages\n     * @property {number|null} [endTimestamp] State endTimestamp\n     */\n\n    /**\n     * Constructs a new State.\n     * @exports State\n     * @classdesc Represents a State.\n     * @implements IState\n     * @constructor\n     * @param {IState=} [properties] Properties to set\n     */\n    function State(properties) {\n        this.participants = {};\n        this.chatMessages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * State participants.\n     * @member {Object.<string,IParticipant>} participants\n     * @memberof State\n     * @instance\n     */\n    State.prototype.participants = $util.emptyObject;\n\n    /**\n     * State host.\n     * @member {string} host\n     * @memberof State\n     * @instance\n     */\n    State.prototype.host = \"\";\n\n    /**\n     * State content.\n     * @member {IContent|null|undefined} content\n     * @memberof State\n     * @instance\n     */\n    State.prototype.content = null;\n\n    /**\n     * State chatMessages.\n     * @member {Array.<IChatMessage>} chatMessages\n     * @memberof State\n     * @instance\n     */\n    State.prototype.chatMessages = $util.emptyArray;\n\n    /**\n     * State endTimestamp.\n     * @member {number} endTimestamp\n     * @memberof State\n     * @instance\n     */\n    State.prototype.endTimestamp = 0;\n\n    /**\n     * Creates a new State instance using the specified properties.\n     * @function create\n     * @memberof State\n     * @static\n     * @param {IState=} [properties] Properties to set\n     * @returns {State} State instance\n     */\n    State.create = function create(properties) {\n        return new State(properties);\n    };\n\n    /**\n     * Encodes the specified State message. Does not implicitly {@link State.verify|verify} messages.\n     * @function encode\n     * @memberof State\n     * @static\n     * @param {IState} message State message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    State.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.participants != null && Object.hasOwnProperty.call(message, \"participants\"))\n            for (var keys = Object.keys(message.participants), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.Participant.encode(message.participants[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        if (message.host != null && Object.hasOwnProperty.call(message, \"host\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.host);\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.chatMessages != null && message.chatMessages.length)\n            for (var i = 0; i < message.chatMessages.length; ++i)\n                $root.ChatMessage.encode(message.chatMessages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.endTimestamp != null && Object.hasOwnProperty.call(message, \"endTimestamp\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.endTimestamp);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified State message, length delimited. Does not implicitly {@link State.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof State\n     * @static\n     * @param {IState} message State message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    State.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a State message from the specified reader or buffer.\n     * @function decode\n     * @memberof State\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {State} State\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    State.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.State(), key;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                reader.skip().pos++;\n                if (message.participants === $util.emptyObject)\n                    message.participants = {};\n                key = reader.string();\n                reader.pos++;\n                message.participants[key] = $root.Participant.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.host = reader.string();\n                break;\n            case 3:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            case 4:\n                if (!(message.chatMessages && message.chatMessages.length))\n                    message.chatMessages = [];\n                message.chatMessages.push($root.ChatMessage.decode(reader, reader.uint32()));\n                break;\n            case 5:\n                message.endTimestamp = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a State message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof State\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {State} State\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    State.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a State message.\n     * @function verify\n     * @memberof State\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    State.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.participants != null && message.hasOwnProperty(\"participants\")) {\n            if (!$util.isObject(message.participants))\n                return \"participants: object expected\";\n            var key = Object.keys(message.participants);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.Participant.verify(message.participants[key[i]]);\n                if (error)\n                    return \"participants.\" + error;\n            }\n        }\n        if (message.host != null && message.hasOwnProperty(\"host\"))\n            if (!$util.isString(message.host))\n                return \"host: string expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        if (message.chatMessages != null && message.hasOwnProperty(\"chatMessages\")) {\n            if (!Array.isArray(message.chatMessages))\n                return \"chatMessages: array expected\";\n            for (var i = 0; i < message.chatMessages.length; ++i) {\n                var error = $root.ChatMessage.verify(message.chatMessages[i]);\n                if (error)\n                    return \"chatMessages.\" + error;\n            }\n        }\n        if (message.endTimestamp != null && message.hasOwnProperty(\"endTimestamp\"))\n            if (!$util.isInteger(message.endTimestamp))\n                return \"endTimestamp: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a State message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof State\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {State} State\n     */\n    State.fromObject = function fromObject(object) {\n        if (object instanceof $root.State)\n            return object;\n        var message = new $root.State();\n        if (object.participants) {\n            if (typeof object.participants !== \"object\")\n                throw TypeError(\".State.participants: object expected\");\n            message.participants = {};\n            for (var keys = Object.keys(object.participants), i = 0; i < keys.length; ++i) {\n                if (typeof object.participants[keys[i]] !== \"object\")\n                    throw TypeError(\".State.participants: object expected\");\n                message.participants[keys[i]] = $root.Participant.fromObject(object.participants[keys[i]]);\n            }\n        }\n        if (object.host != null)\n            message.host = String(object.host);\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".State.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        if (object.chatMessages) {\n            if (!Array.isArray(object.chatMessages))\n                throw TypeError(\".State.chatMessages: array expected\");\n            message.chatMessages = [];\n            for (var i = 0; i < object.chatMessages.length; ++i) {\n                if (typeof object.chatMessages[i] !== \"object\")\n                    throw TypeError(\".State.chatMessages: object expected\");\n                message.chatMessages[i] = $root.ChatMessage.fromObject(object.chatMessages[i]);\n            }\n        }\n        if (object.endTimestamp != null)\n            message.endTimestamp = object.endTimestamp >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a State message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof State\n     * @static\n     * @param {State} message State\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    State.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.chatMessages = [];\n        if (options.objects || options.defaults)\n            object.participants = {};\n        if (options.defaults) {\n            object.host = \"\";\n            object.content = null;\n            object.endTimestamp = 0;\n        }\n        var keys2;\n        if (message.participants && (keys2 = Object.keys(message.participants)).length) {\n            object.participants = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.participants[keys2[j]] = $root.Participant.toObject(message.participants[keys2[j]], options);\n        }\n        if (message.host != null && message.hasOwnProperty(\"host\"))\n            object.host = message.host;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        if (message.chatMessages && message.chatMessages.length) {\n            object.chatMessages = [];\n            for (var j = 0; j < message.chatMessages.length; ++j)\n                object.chatMessages[j] = $root.ChatMessage.toObject(message.chatMessages[j], options);\n        }\n        if (message.endTimestamp != null && message.hasOwnProperty(\"endTimestamp\"))\n            object.endTimestamp = message.endTimestamp;\n        return object;\n    };\n\n    /**\n     * Converts this State to JSON.\n     * @function toJSON\n     * @memberof State\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    State.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return State;\n})();\n\n$root.AddParticipants = (function() {\n\n    /**\n     * Properties of an AddParticipants.\n     * @exports IAddParticipants\n     * @interface IAddParticipants\n     * @property {Object.<string,IParticipant>|null} [participants] AddParticipants participants\n     */\n\n    /**\n     * Constructs a new AddParticipants.\n     * @exports AddParticipants\n     * @classdesc Represents an AddParticipants.\n     * @implements IAddParticipants\n     * @constructor\n     * @param {IAddParticipants=} [properties] Properties to set\n     */\n    function AddParticipants(properties) {\n        this.participants = {};\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AddParticipants participants.\n     * @member {Object.<string,IParticipant>} participants\n     * @memberof AddParticipants\n     * @instance\n     */\n    AddParticipants.prototype.participants = $util.emptyObject;\n\n    /**\n     * Creates a new AddParticipants instance using the specified properties.\n     * @function create\n     * @memberof AddParticipants\n     * @static\n     * @param {IAddParticipants=} [properties] Properties to set\n     * @returns {AddParticipants} AddParticipants instance\n     */\n    AddParticipants.create = function create(properties) {\n        return new AddParticipants(properties);\n    };\n\n    /**\n     * Encodes the specified AddParticipants message. Does not implicitly {@link AddParticipants.verify|verify} messages.\n     * @function encode\n     * @memberof AddParticipants\n     * @static\n     * @param {IAddParticipants} message AddParticipants message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddParticipants.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.participants != null && Object.hasOwnProperty.call(message, \"participants\"))\n            for (var keys = Object.keys(message.participants), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.Participant.encode(message.participants[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AddParticipants message, length delimited. Does not implicitly {@link AddParticipants.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AddParticipants\n     * @static\n     * @param {IAddParticipants} message AddParticipants message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddParticipants.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AddParticipants message from the specified reader or buffer.\n     * @function decode\n     * @memberof AddParticipants\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AddParticipants} AddParticipants\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddParticipants.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AddParticipants(), key;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                reader.skip().pos++;\n                if (message.participants === $util.emptyObject)\n                    message.participants = {};\n                key = reader.string();\n                reader.pos++;\n                message.participants[key] = $root.Participant.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AddParticipants message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AddParticipants\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AddParticipants} AddParticipants\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddParticipants.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AddParticipants message.\n     * @function verify\n     * @memberof AddParticipants\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AddParticipants.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.participants != null && message.hasOwnProperty(\"participants\")) {\n            if (!$util.isObject(message.participants))\n                return \"participants: object expected\";\n            var key = Object.keys(message.participants);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.Participant.verify(message.participants[key[i]]);\n                if (error)\n                    return \"participants.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates an AddParticipants message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AddParticipants\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AddParticipants} AddParticipants\n     */\n    AddParticipants.fromObject = function fromObject(object) {\n        if (object instanceof $root.AddParticipants)\n            return object;\n        var message = new $root.AddParticipants();\n        if (object.participants) {\n            if (typeof object.participants !== \"object\")\n                throw TypeError(\".AddParticipants.participants: object expected\");\n            message.participants = {};\n            for (var keys = Object.keys(object.participants), i = 0; i < keys.length; ++i) {\n                if (typeof object.participants[keys[i]] !== \"object\")\n                    throw TypeError(\".AddParticipants.participants: object expected\");\n                message.participants[keys[i]] = $root.Participant.fromObject(object.participants[keys[i]]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AddParticipants message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AddParticipants\n     * @static\n     * @param {AddParticipants} message AddParticipants\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AddParticipants.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.objects || options.defaults)\n            object.participants = {};\n        var keys2;\n        if (message.participants && (keys2 = Object.keys(message.participants)).length) {\n            object.participants = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.participants[keys2[j]] = $root.Participant.toObject(message.participants[keys2[j]], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this AddParticipants to JSON.\n     * @function toJSON\n     * @memberof AddParticipants\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AddParticipants.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AddParticipants;\n})();\n\n$root.RemoveParticipants = (function() {\n\n    /**\n     * Properties of a RemoveParticipants.\n     * @exports IRemoveParticipants\n     * @interface IRemoveParticipants\n     * @property {Array.<string>|null} [participants] RemoveParticipants participants\n     */\n\n    /**\n     * Constructs a new RemoveParticipants.\n     * @exports RemoveParticipants\n     * @classdesc Represents a RemoveParticipants.\n     * @implements IRemoveParticipants\n     * @constructor\n     * @param {IRemoveParticipants=} [properties] Properties to set\n     */\n    function RemoveParticipants(properties) {\n        this.participants = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * RemoveParticipants participants.\n     * @member {Array.<string>} participants\n     * @memberof RemoveParticipants\n     * @instance\n     */\n    RemoveParticipants.prototype.participants = $util.emptyArray;\n\n    /**\n     * Creates a new RemoveParticipants instance using the specified properties.\n     * @function create\n     * @memberof RemoveParticipants\n     * @static\n     * @param {IRemoveParticipants=} [properties] Properties to set\n     * @returns {RemoveParticipants} RemoveParticipants instance\n     */\n    RemoveParticipants.create = function create(properties) {\n        return new RemoveParticipants(properties);\n    };\n\n    /**\n     * Encodes the specified RemoveParticipants message. Does not implicitly {@link RemoveParticipants.verify|verify} messages.\n     * @function encode\n     * @memberof RemoveParticipants\n     * @static\n     * @param {IRemoveParticipants} message RemoveParticipants message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RemoveParticipants.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.participants != null && message.participants.length)\n            for (var i = 0; i < message.participants.length; ++i)\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.participants[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RemoveParticipants message, length delimited. Does not implicitly {@link RemoveParticipants.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RemoveParticipants\n     * @static\n     * @param {IRemoveParticipants} message RemoveParticipants message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RemoveParticipants.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RemoveParticipants message from the specified reader or buffer.\n     * @function decode\n     * @memberof RemoveParticipants\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RemoveParticipants} RemoveParticipants\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RemoveParticipants.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RemoveParticipants();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.participants && message.participants.length))\n                    message.participants = [];\n                message.participants.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RemoveParticipants message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RemoveParticipants\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RemoveParticipants} RemoveParticipants\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RemoveParticipants.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RemoveParticipants message.\n     * @function verify\n     * @memberof RemoveParticipants\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RemoveParticipants.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.participants != null && message.hasOwnProperty(\"participants\")) {\n            if (!Array.isArray(message.participants))\n                return \"participants: array expected\";\n            for (var i = 0; i < message.participants.length; ++i)\n                if (!$util.isString(message.participants[i]))\n                    return \"participants: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a RemoveParticipants message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RemoveParticipants\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RemoveParticipants} RemoveParticipants\n     */\n    RemoveParticipants.fromObject = function fromObject(object) {\n        if (object instanceof $root.RemoveParticipants)\n            return object;\n        var message = new $root.RemoveParticipants();\n        if (object.participants) {\n            if (!Array.isArray(object.participants))\n                throw TypeError(\".RemoveParticipants.participants: array expected\");\n            message.participants = [];\n            for (var i = 0; i < object.participants.length; ++i)\n                message.participants[i] = String(object.participants[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a RemoveParticipants message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RemoveParticipants\n     * @static\n     * @param {RemoveParticipants} message RemoveParticipants\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RemoveParticipants.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.participants = [];\n        if (message.participants && message.participants.length) {\n            object.participants = [];\n            for (var j = 0; j < message.participants.length; ++j)\n                object.participants[j] = message.participants[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this RemoveParticipants to JSON.\n     * @function toJSON\n     * @memberof RemoveParticipants\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RemoveParticipants.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RemoveParticipants;\n})();\n\n$root.ChangeContent = (function() {\n\n    /**\n     * Properties of a ChangeContent.\n     * @exports IChangeContent\n     * @interface IChangeContent\n     * @property {IContent|null} [content] ChangeContent content\n     */\n\n    /**\n     * Constructs a new ChangeContent.\n     * @exports ChangeContent\n     * @classdesc Represents a ChangeContent.\n     * @implements IChangeContent\n     * @constructor\n     * @param {IChangeContent=} [properties] Properties to set\n     */\n    function ChangeContent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ChangeContent content.\n     * @member {IContent|null|undefined} content\n     * @memberof ChangeContent\n     * @instance\n     */\n    ChangeContent.prototype.content = null;\n\n    /**\n     * Creates a new ChangeContent instance using the specified properties.\n     * @function create\n     * @memberof ChangeContent\n     * @static\n     * @param {IChangeContent=} [properties] Properties to set\n     * @returns {ChangeContent} ChangeContent instance\n     */\n    ChangeContent.create = function create(properties) {\n        return new ChangeContent(properties);\n    };\n\n    /**\n     * Encodes the specified ChangeContent message. Does not implicitly {@link ChangeContent.verify|verify} messages.\n     * @function encode\n     * @memberof ChangeContent\n     * @static\n     * @param {IChangeContent} message ChangeContent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChangeContent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ChangeContent message, length delimited. Does not implicitly {@link ChangeContent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ChangeContent\n     * @static\n     * @param {IChangeContent} message ChangeContent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChangeContent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ChangeContent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ChangeContent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ChangeContent} ChangeContent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChangeContent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChangeContent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ChangeContent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ChangeContent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ChangeContent} ChangeContent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChangeContent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ChangeContent message.\n     * @function verify\n     * @memberof ChangeContent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ChangeContent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ChangeContent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ChangeContent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ChangeContent} ChangeContent\n     */\n    ChangeContent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ChangeContent)\n            return object;\n        var message = new $root.ChangeContent();\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".ChangeContent.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ChangeContent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ChangeContent\n     * @static\n     * @param {ChangeContent} message ChangeContent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ChangeContent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.content = null;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        return object;\n    };\n\n    /**\n     * Converts this ChangeContent to JSON.\n     * @function toJSON\n     * @memberof ChangeContent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ChangeContent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ChangeContent;\n})();\n\n$root.ChangeHost = (function() {\n\n    /**\n     * Properties of a ChangeHost.\n     * @exports IChangeHost\n     * @interface IChangeHost\n     * @property {string|null} [hostId] ChangeHost hostId\n     */\n\n    /**\n     * Constructs a new ChangeHost.\n     * @exports ChangeHost\n     * @classdesc Represents a ChangeHost.\n     * @implements IChangeHost\n     * @constructor\n     * @param {IChangeHost=} [properties] Properties to set\n     */\n    function ChangeHost(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ChangeHost hostId.\n     * @member {string} hostId\n     * @memberof ChangeHost\n     * @instance\n     */\n    ChangeHost.prototype.hostId = \"\";\n\n    /**\n     * Creates a new ChangeHost instance using the specified properties.\n     * @function create\n     * @memberof ChangeHost\n     * @static\n     * @param {IChangeHost=} [properties] Properties to set\n     * @returns {ChangeHost} ChangeHost instance\n     */\n    ChangeHost.create = function create(properties) {\n        return new ChangeHost(properties);\n    };\n\n    /**\n     * Encodes the specified ChangeHost message. Does not implicitly {@link ChangeHost.verify|verify} messages.\n     * @function encode\n     * @memberof ChangeHost\n     * @static\n     * @param {IChangeHost} message ChangeHost message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChangeHost.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.hostId != null && Object.hasOwnProperty.call(message, \"hostId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ChangeHost message, length delimited. Does not implicitly {@link ChangeHost.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ChangeHost\n     * @static\n     * @param {IChangeHost} message ChangeHost message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChangeHost.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ChangeHost message from the specified reader or buffer.\n     * @function decode\n     * @memberof ChangeHost\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ChangeHost} ChangeHost\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChangeHost.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChangeHost();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.hostId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ChangeHost message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ChangeHost\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ChangeHost} ChangeHost\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChangeHost.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ChangeHost message.\n     * @function verify\n     * @memberof ChangeHost\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ChangeHost.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.hostId != null && message.hasOwnProperty(\"hostId\"))\n            if (!$util.isString(message.hostId))\n                return \"hostId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ChangeHost message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ChangeHost\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ChangeHost} ChangeHost\n     */\n    ChangeHost.fromObject = function fromObject(object) {\n        if (object instanceof $root.ChangeHost)\n            return object;\n        var message = new $root.ChangeHost();\n        if (object.hostId != null)\n            message.hostId = String(object.hostId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ChangeHost message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ChangeHost\n     * @static\n     * @param {ChangeHost} message ChangeHost\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ChangeHost.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.hostId = \"\";\n        if (message.hostId != null && message.hasOwnProperty(\"hostId\"))\n            object.hostId = message.hostId;\n        return object;\n    };\n\n    /**\n     * Converts this ChangeHost to JSON.\n     * @function toJSON\n     * @memberof ChangeHost\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ChangeHost.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ChangeHost;\n})();\n\n$root.AppendChatMessage = (function() {\n\n    /**\n     * Properties of an AppendChatMessage.\n     * @exports IAppendChatMessage\n     * @interface IAppendChatMessage\n     * @property {Array.<IChatMessage>|null} [messages] AppendChatMessage messages\n     */\n\n    /**\n     * Constructs a new AppendChatMessage.\n     * @exports AppendChatMessage\n     * @classdesc Represents an AppendChatMessage.\n     * @implements IAppendChatMessage\n     * @constructor\n     * @param {IAppendChatMessage=} [properties] Properties to set\n     */\n    function AppendChatMessage(properties) {\n        this.messages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AppendChatMessage messages.\n     * @member {Array.<IChatMessage>} messages\n     * @memberof AppendChatMessage\n     * @instance\n     */\n    AppendChatMessage.prototype.messages = $util.emptyArray;\n\n    /**\n     * Creates a new AppendChatMessage instance using the specified properties.\n     * @function create\n     * @memberof AppendChatMessage\n     * @static\n     * @param {IAppendChatMessage=} [properties] Properties to set\n     * @returns {AppendChatMessage} AppendChatMessage instance\n     */\n    AppendChatMessage.create = function create(properties) {\n        return new AppendChatMessage(properties);\n    };\n\n    /**\n     * Encodes the specified AppendChatMessage message. Does not implicitly {@link AppendChatMessage.verify|verify} messages.\n     * @function encode\n     * @memberof AppendChatMessage\n     * @static\n     * @param {IAppendChatMessage} message AppendChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AppendChatMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.messages != null && message.messages.length)\n            for (var i = 0; i < message.messages.length; ++i)\n                $root.ChatMessage.encode(message.messages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AppendChatMessage message, length delimited. Does not implicitly {@link AppendChatMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AppendChatMessage\n     * @static\n     * @param {IAppendChatMessage} message AppendChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AppendChatMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AppendChatMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof AppendChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AppendChatMessage} AppendChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AppendChatMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AppendChatMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.messages && message.messages.length))\n                    message.messages = [];\n                message.messages.push($root.ChatMessage.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AppendChatMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AppendChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AppendChatMessage} AppendChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AppendChatMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AppendChatMessage message.\n     * @function verify\n     * @memberof AppendChatMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AppendChatMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.messages != null && message.hasOwnProperty(\"messages\")) {\n            if (!Array.isArray(message.messages))\n                return \"messages: array expected\";\n            for (var i = 0; i < message.messages.length; ++i) {\n                var error = $root.ChatMessage.verify(message.messages[i]);\n                if (error)\n                    return \"messages.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates an AppendChatMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AppendChatMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AppendChatMessage} AppendChatMessage\n     */\n    AppendChatMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.AppendChatMessage)\n            return object;\n        var message = new $root.AppendChatMessage();\n        if (object.messages) {\n            if (!Array.isArray(object.messages))\n                throw TypeError(\".AppendChatMessage.messages: array expected\");\n            message.messages = [];\n            for (var i = 0; i < object.messages.length; ++i) {\n                if (typeof object.messages[i] !== \"object\")\n                    throw TypeError(\".AppendChatMessage.messages: object expected\");\n                message.messages[i] = $root.ChatMessage.fromObject(object.messages[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AppendChatMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AppendChatMessage\n     * @static\n     * @param {AppendChatMessage} message AppendChatMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AppendChatMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.messages = [];\n        if (message.messages && message.messages.length) {\n            object.messages = [];\n            for (var j = 0; j < message.messages.length; ++j)\n                object.messages[j] = $root.ChatMessage.toObject(message.messages[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this AppendChatMessage to JSON.\n     * @function toJSON\n     * @memberof AppendChatMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AppendChatMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AppendChatMessage;\n})();\n\n$root.ReceiveTrophy = (function() {\n\n    /**\n     * Properties of a ReceiveTrophy.\n     * @exports IReceiveTrophy\n     * @interface IReceiveTrophy\n     * @property {ITrophy|null} [trophy] ReceiveTrophy trophy\n     */\n\n    /**\n     * Constructs a new ReceiveTrophy.\n     * @exports ReceiveTrophy\n     * @classdesc Represents a ReceiveTrophy.\n     * @implements IReceiveTrophy\n     * @constructor\n     * @param {IReceiveTrophy=} [properties] Properties to set\n     */\n    function ReceiveTrophy(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ReceiveTrophy trophy.\n     * @member {ITrophy|null|undefined} trophy\n     * @memberof ReceiveTrophy\n     * @instance\n     */\n    ReceiveTrophy.prototype.trophy = null;\n\n    /**\n     * Creates a new ReceiveTrophy instance using the specified properties.\n     * @function create\n     * @memberof ReceiveTrophy\n     * @static\n     * @param {IReceiveTrophy=} [properties] Properties to set\n     * @returns {ReceiveTrophy} ReceiveTrophy instance\n     */\n    ReceiveTrophy.create = function create(properties) {\n        return new ReceiveTrophy(properties);\n    };\n\n    /**\n     * Encodes the specified ReceiveTrophy message. Does not implicitly {@link ReceiveTrophy.verify|verify} messages.\n     * @function encode\n     * @memberof ReceiveTrophy\n     * @static\n     * @param {IReceiveTrophy} message ReceiveTrophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ReceiveTrophy.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophy != null && Object.hasOwnProperty.call(message, \"trophy\"))\n            $root.Trophy.encode(message.trophy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ReceiveTrophy message, length delimited. Does not implicitly {@link ReceiveTrophy.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ReceiveTrophy\n     * @static\n     * @param {IReceiveTrophy} message ReceiveTrophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ReceiveTrophy.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ReceiveTrophy message from the specified reader or buffer.\n     * @function decode\n     * @memberof ReceiveTrophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ReceiveTrophy} ReceiveTrophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ReceiveTrophy.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ReceiveTrophy();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophy = $root.Trophy.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ReceiveTrophy message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ReceiveTrophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ReceiveTrophy} ReceiveTrophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ReceiveTrophy.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ReceiveTrophy message.\n     * @function verify\n     * @memberof ReceiveTrophy\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ReceiveTrophy.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\")) {\n            var error = $root.Trophy.verify(message.trophy);\n            if (error)\n                return \"trophy.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ReceiveTrophy message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ReceiveTrophy\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ReceiveTrophy} ReceiveTrophy\n     */\n    ReceiveTrophy.fromObject = function fromObject(object) {\n        if (object instanceof $root.ReceiveTrophy)\n            return object;\n        var message = new $root.ReceiveTrophy();\n        if (object.trophy != null) {\n            if (typeof object.trophy !== \"object\")\n                throw TypeError(\".ReceiveTrophy.trophy: object expected\");\n            message.trophy = $root.Trophy.fromObject(object.trophy);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ReceiveTrophy message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ReceiveTrophy\n     * @static\n     * @param {ReceiveTrophy} message ReceiveTrophy\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ReceiveTrophy.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.trophy = null;\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            object.trophy = $root.Trophy.toObject(message.trophy, options);\n        return object;\n    };\n\n    /**\n     * Converts this ReceiveTrophy to JSON.\n     * @function toJSON\n     * @memberof ReceiveTrophy\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ReceiveTrophy.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ReceiveTrophy;\n})();\n\n$root.ClassEnded = (function() {\n\n    /**\n     * Properties of a ClassEnded.\n     * @exports IClassEnded\n     * @interface IClassEnded\n     */\n\n    /**\n     * Constructs a new ClassEnded.\n     * @exports ClassEnded\n     * @classdesc Represents a ClassEnded.\n     * @implements IClassEnded\n     * @constructor\n     * @param {IClassEnded=} [properties] Properties to set\n     */\n    function ClassEnded(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new ClassEnded instance using the specified properties.\n     * @function create\n     * @memberof ClassEnded\n     * @static\n     * @param {IClassEnded=} [properties] Properties to set\n     * @returns {ClassEnded} ClassEnded instance\n     */\n    ClassEnded.create = function create(properties) {\n        return new ClassEnded(properties);\n    };\n\n    /**\n     * Encodes the specified ClassEnded message. Does not implicitly {@link ClassEnded.verify|verify} messages.\n     * @function encode\n     * @memberof ClassEnded\n     * @static\n     * @param {IClassEnded} message ClassEnded message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassEnded.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassEnded message, length delimited. Does not implicitly {@link ClassEnded.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassEnded\n     * @static\n     * @param {IClassEnded} message ClassEnded message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassEnded.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassEnded message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassEnded\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassEnded} ClassEnded\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassEnded.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassEnded();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassEnded message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassEnded\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassEnded} ClassEnded\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassEnded.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassEnded message.\n     * @function verify\n     * @memberof ClassEnded\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassEnded.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ClassEnded message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassEnded\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassEnded} ClassEnded\n     */\n    ClassEnded.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassEnded)\n            return object;\n        return new $root.ClassEnded();\n    };\n\n    /**\n     * Creates a plain object from a ClassEnded message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassEnded\n     * @static\n     * @param {ClassEnded} message ClassEnded\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassEnded.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this ClassEnded to JSON.\n     * @function toJSON\n     * @memberof ClassEnded\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassEnded.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassEnded;\n})();\n\n$root.Device = (function() {\n\n    /**\n     * Properties of a Device.\n     * @exports IDevice\n     * @interface IDevice\n     * @property {IActivity|null} [activity] Device activity\n     * @property {Array.<IWebRTCStream>|null} [webRTCStreams] Device webRTCStreams\n     */\n\n    /**\n     * Constructs a new Device.\n     * @exports Device\n     * @classdesc Represents a Device.\n     * @implements IDevice\n     * @constructor\n     * @param {IDevice=} [properties] Properties to set\n     */\n    function Device(properties) {\n        this.webRTCStreams = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Device activity.\n     * @member {IActivity|null|undefined} activity\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.activity = null;\n\n    /**\n     * Device webRTCStreams.\n     * @member {Array.<IWebRTCStream>} webRTCStreams\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.webRTCStreams = $util.emptyArray;\n\n    /**\n     * Creates a new Device instance using the specified properties.\n     * @function create\n     * @memberof Device\n     * @static\n     * @param {IDevice=} [properties] Properties to set\n     * @returns {Device} Device instance\n     */\n    Device.create = function create(properties) {\n        return new Device(properties);\n    };\n\n    /**\n     * Encodes the specified Device message. Does not implicitly {@link Device.verify|verify} messages.\n     * @function encode\n     * @memberof Device\n     * @static\n     * @param {IDevice} message Device message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Device.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.activity != null && Object.hasOwnProperty.call(message, \"activity\"))\n            $root.Activity.encode(message.activity, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.webRTCStreams != null && message.webRTCStreams.length)\n            for (var i = 0; i < message.webRTCStreams.length; ++i)\n                $root.WebRTCStream.encode(message.webRTCStreams[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Device message, length delimited. Does not implicitly {@link Device.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Device\n     * @static\n     * @param {IDevice} message Device message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Device.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Device message from the specified reader or buffer.\n     * @function decode\n     * @memberof Device\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Device} Device\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Device.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Device();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.activity = $root.Activity.decode(reader, reader.uint32());\n                break;\n            case 2:\n                if (!(message.webRTCStreams && message.webRTCStreams.length))\n                    message.webRTCStreams = [];\n                message.webRTCStreams.push($root.WebRTCStream.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Device message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Device\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Device} Device\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Device.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Device message.\n     * @function verify\n     * @memberof Device\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Device.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.activity != null && message.hasOwnProperty(\"activity\")) {\n            var error = $root.Activity.verify(message.activity);\n            if (error)\n                return \"activity.\" + error;\n        }\n        if (message.webRTCStreams != null && message.hasOwnProperty(\"webRTCStreams\")) {\n            if (!Array.isArray(message.webRTCStreams))\n                return \"webRTCStreams: array expected\";\n            for (var i = 0; i < message.webRTCStreams.length; ++i) {\n                var error = $root.WebRTCStream.verify(message.webRTCStreams[i]);\n                if (error)\n                    return \"webRTCStreams.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a Device message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Device\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Device} Device\n     */\n    Device.fromObject = function fromObject(object) {\n        if (object instanceof $root.Device)\n            return object;\n        var message = new $root.Device();\n        if (object.activity != null) {\n            if (typeof object.activity !== \"object\")\n                throw TypeError(\".Device.activity: object expected\");\n            message.activity = $root.Activity.fromObject(object.activity);\n        }\n        if (object.webRTCStreams) {\n            if (!Array.isArray(object.webRTCStreams))\n                throw TypeError(\".Device.webRTCStreams: array expected\");\n            message.webRTCStreams = [];\n            for (var i = 0; i < object.webRTCStreams.length; ++i) {\n                if (typeof object.webRTCStreams[i] !== \"object\")\n                    throw TypeError(\".Device.webRTCStreams: object expected\");\n                message.webRTCStreams[i] = $root.WebRTCStream.fromObject(object.webRTCStreams[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Device message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Device\n     * @static\n     * @param {Device} message Device\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Device.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.webRTCStreams = [];\n        if (options.defaults)\n            object.activity = null;\n        if (message.activity != null && message.hasOwnProperty(\"activity\"))\n            object.activity = $root.Activity.toObject(message.activity, options);\n        if (message.webRTCStreams && message.webRTCStreams.length) {\n            object.webRTCStreams = [];\n            for (var j = 0; j < message.webRTCStreams.length; ++j)\n                object.webRTCStreams[j] = $root.WebRTCStream.toObject(message.webRTCStreams[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this Device to JSON.\n     * @function toJSON\n     * @memberof Device\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Device.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Device;\n})();\n\n$root.Activity = (function() {\n\n    /**\n     * Properties of an Activity.\n     * @exports IActivity\n     * @interface IActivity\n     * @property {string|null} [id] Activity id\n     * @property {string|null} [streamId] Activity streamId\n     */\n\n    /**\n     * Constructs a new Activity.\n     * @exports Activity\n     * @classdesc Represents an Activity.\n     * @implements IActivity\n     * @constructor\n     * @param {IActivity=} [properties] Properties to set\n     */\n    function Activity(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Activity id.\n     * @member {string} id\n     * @memberof Activity\n     * @instance\n     */\n    Activity.prototype.id = \"\";\n\n    /**\n     * Activity streamId.\n     * @member {string} streamId\n     * @memberof Activity\n     * @instance\n     */\n    Activity.prototype.streamId = \"\";\n\n    /**\n     * Creates a new Activity instance using the specified properties.\n     * @function create\n     * @memberof Activity\n     * @static\n     * @param {IActivity=} [properties] Properties to set\n     * @returns {Activity} Activity instance\n     */\n    Activity.create = function create(properties) {\n        return new Activity(properties);\n    };\n\n    /**\n     * Encodes the specified Activity message. Does not implicitly {@link Activity.verify|verify} messages.\n     * @function encode\n     * @memberof Activity\n     * @static\n     * @param {IActivity} message Activity message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Activity.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.streamId != null && Object.hasOwnProperty.call(message, \"streamId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.streamId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Activity message, length delimited. Does not implicitly {@link Activity.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Activity\n     * @static\n     * @param {IActivity} message Activity message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Activity.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an Activity message from the specified reader or buffer.\n     * @function decode\n     * @memberof Activity\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Activity} Activity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Activity.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Activity();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.streamId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an Activity message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Activity\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Activity} Activity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Activity.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an Activity message.\n     * @function verify\n     * @memberof Activity\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Activity.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isString(message.streamId))\n                return \"streamId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an Activity message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Activity\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Activity} Activity\n     */\n    Activity.fromObject = function fromObject(object) {\n        if (object instanceof $root.Activity)\n            return object;\n        var message = new $root.Activity();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.streamId != null)\n            message.streamId = String(object.streamId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an Activity message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Activity\n     * @static\n     * @param {Activity} message Activity\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Activity.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.id = \"\";\n            object.streamId = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        return object;\n    };\n\n    /**\n     * Converts this Activity to JSON.\n     * @function toJSON\n     * @memberof Activity\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Activity.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Activity;\n})();\n\n$root.WebRTCStream = (function() {\n\n    /**\n     * Properties of a WebRTCStream.\n     * @exports IWebRTCStream\n     * @interface IWebRTCStream\n     * @property {string|null} [id] WebRTCStream id\n     * @property {string|null} [label] WebRTCStream label\n     * @property {Array.<IWebRTCTrack>|null} [tracks] WebRTCStream tracks\n     */\n\n    /**\n     * Constructs a new WebRTCStream.\n     * @exports WebRTCStream\n     * @classdesc Represents a WebRTCStream.\n     * @implements IWebRTCStream\n     * @constructor\n     * @param {IWebRTCStream=} [properties] Properties to set\n     */\n    function WebRTCStream(properties) {\n        this.tracks = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * WebRTCStream id.\n     * @member {string} id\n     * @memberof WebRTCStream\n     * @instance\n     */\n    WebRTCStream.prototype.id = \"\";\n\n    /**\n     * WebRTCStream label.\n     * @member {string} label\n     * @memberof WebRTCStream\n     * @instance\n     */\n    WebRTCStream.prototype.label = \"\";\n\n    /**\n     * WebRTCStream tracks.\n     * @member {Array.<IWebRTCTrack>} tracks\n     * @memberof WebRTCStream\n     * @instance\n     */\n    WebRTCStream.prototype.tracks = $util.emptyArray;\n\n    /**\n     * Creates a new WebRTCStream instance using the specified properties.\n     * @function create\n     * @memberof WebRTCStream\n     * @static\n     * @param {IWebRTCStream=} [properties] Properties to set\n     * @returns {WebRTCStream} WebRTCStream instance\n     */\n    WebRTCStream.create = function create(properties) {\n        return new WebRTCStream(properties);\n    };\n\n    /**\n     * Encodes the specified WebRTCStream message. Does not implicitly {@link WebRTCStream.verify|verify} messages.\n     * @function encode\n     * @memberof WebRTCStream\n     * @static\n     * @param {IWebRTCStream} message WebRTCStream message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    WebRTCStream.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.label != null && Object.hasOwnProperty.call(message, \"label\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.label);\n        if (message.tracks != null && message.tracks.length)\n            for (var i = 0; i < message.tracks.length; ++i)\n                $root.WebRTCTrack.encode(message.tracks[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified WebRTCStream message, length delimited. Does not implicitly {@link WebRTCStream.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof WebRTCStream\n     * @static\n     * @param {IWebRTCStream} message WebRTCStream message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    WebRTCStream.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a WebRTCStream message from the specified reader or buffer.\n     * @function decode\n     * @memberof WebRTCStream\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {WebRTCStream} WebRTCStream\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    WebRTCStream.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.WebRTCStream();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.label = reader.string();\n                break;\n            case 3:\n                if (!(message.tracks && message.tracks.length))\n                    message.tracks = [];\n                message.tracks.push($root.WebRTCTrack.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a WebRTCStream message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof WebRTCStream\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {WebRTCStream} WebRTCStream\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    WebRTCStream.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a WebRTCStream message.\n     * @function verify\n     * @memberof WebRTCStream\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    WebRTCStream.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.label != null && message.hasOwnProperty(\"label\"))\n            if (!$util.isString(message.label))\n                return \"label: string expected\";\n        if (message.tracks != null && message.hasOwnProperty(\"tracks\")) {\n            if (!Array.isArray(message.tracks))\n                return \"tracks: array expected\";\n            for (var i = 0; i < message.tracks.length; ++i) {\n                var error = $root.WebRTCTrack.verify(message.tracks[i]);\n                if (error)\n                    return \"tracks.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a WebRTCStream message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof WebRTCStream\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {WebRTCStream} WebRTCStream\n     */\n    WebRTCStream.fromObject = function fromObject(object) {\n        if (object instanceof $root.WebRTCStream)\n            return object;\n        var message = new $root.WebRTCStream();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.label != null)\n            message.label = String(object.label);\n        if (object.tracks) {\n            if (!Array.isArray(object.tracks))\n                throw TypeError(\".WebRTCStream.tracks: array expected\");\n            message.tracks = [];\n            for (var i = 0; i < object.tracks.length; ++i) {\n                if (typeof object.tracks[i] !== \"object\")\n                    throw TypeError(\".WebRTCStream.tracks: object expected\");\n                message.tracks[i] = $root.WebRTCTrack.fromObject(object.tracks[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a WebRTCStream message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof WebRTCStream\n     * @static\n     * @param {WebRTCStream} message WebRTCStream\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    WebRTCStream.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.tracks = [];\n        if (options.defaults) {\n            object.id = \"\";\n            object.label = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.label != null && message.hasOwnProperty(\"label\"))\n            object.label = message.label;\n        if (message.tracks && message.tracks.length) {\n            object.tracks = [];\n            for (var j = 0; j < message.tracks.length; ++j)\n                object.tracks[j] = $root.WebRTCTrack.toObject(message.tracks[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this WebRTCStream to JSON.\n     * @function toJSON\n     * @memberof WebRTCStream\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    WebRTCStream.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return WebRTCStream;\n})();\n\n$root.WebRTCTrack = (function() {\n\n    /**\n     * Properties of a WebRTCTrack.\n     * @exports IWebRTCTrack\n     * @interface IWebRTCTrack\n     * @property {string|null} [id] WebRTCTrack id\n     * @property {string|null} [sfu] WebRTCTrack sfu\n     */\n\n    /**\n     * Constructs a new WebRTCTrack.\n     * @exports WebRTCTrack\n     * @classdesc Represents a WebRTCTrack.\n     * @implements IWebRTCTrack\n     * @constructor\n     * @param {IWebRTCTrack=} [properties] Properties to set\n     */\n    function WebRTCTrack(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * WebRTCTrack id.\n     * @member {string} id\n     * @memberof WebRTCTrack\n     * @instance\n     */\n    WebRTCTrack.prototype.id = \"\";\n\n    /**\n     * WebRTCTrack sfu.\n     * @member {string} sfu\n     * @memberof WebRTCTrack\n     * @instance\n     */\n    WebRTCTrack.prototype.sfu = \"\";\n\n    /**\n     * Creates a new WebRTCTrack instance using the specified properties.\n     * @function create\n     * @memberof WebRTCTrack\n     * @static\n     * @param {IWebRTCTrack=} [properties] Properties to set\n     * @returns {WebRTCTrack} WebRTCTrack instance\n     */\n    WebRTCTrack.create = function create(properties) {\n        return new WebRTCTrack(properties);\n    };\n\n    /**\n     * Encodes the specified WebRTCTrack message. Does not implicitly {@link WebRTCTrack.verify|verify} messages.\n     * @function encode\n     * @memberof WebRTCTrack\n     * @static\n     * @param {IWebRTCTrack} message WebRTCTrack message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    WebRTCTrack.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.sfu != null && Object.hasOwnProperty.call(message, \"sfu\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sfu);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified WebRTCTrack message, length delimited. Does not implicitly {@link WebRTCTrack.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof WebRTCTrack\n     * @static\n     * @param {IWebRTCTrack} message WebRTCTrack message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    WebRTCTrack.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a WebRTCTrack message from the specified reader or buffer.\n     * @function decode\n     * @memberof WebRTCTrack\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {WebRTCTrack} WebRTCTrack\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    WebRTCTrack.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.WebRTCTrack();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.sfu = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a WebRTCTrack message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof WebRTCTrack\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {WebRTCTrack} WebRTCTrack\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    WebRTCTrack.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a WebRTCTrack message.\n     * @function verify\n     * @memberof WebRTCTrack\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    WebRTCTrack.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.sfu != null && message.hasOwnProperty(\"sfu\"))\n            if (!$util.isString(message.sfu))\n                return \"sfu: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a WebRTCTrack message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof WebRTCTrack\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {WebRTCTrack} WebRTCTrack\n     */\n    WebRTCTrack.fromObject = function fromObject(object) {\n        if (object instanceof $root.WebRTCTrack)\n            return object;\n        var message = new $root.WebRTCTrack();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.sfu != null)\n            message.sfu = String(object.sfu);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a WebRTCTrack message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof WebRTCTrack\n     * @static\n     * @param {WebRTCTrack} message WebRTCTrack\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    WebRTCTrack.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.id = \"\";\n            object.sfu = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.sfu != null && message.hasOwnProperty(\"sfu\"))\n            object.sfu = message.sfu;\n        return object;\n    };\n\n    /**\n     * Converts this WebRTCTrack to JSON.\n     * @function toJSON\n     * @memberof WebRTCTrack\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    WebRTCTrack.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return WebRTCTrack;\n})();\n\n$root.Trophy = (function() {\n\n    /**\n     * Properties of a Trophy.\n     * @exports ITrophy\n     * @interface ITrophy\n     * @property {string|null} [trophy] Trophy trophy\n     * @property {number|null} [timestamp] Trophy timestamp\n     */\n\n    /**\n     * Constructs a new Trophy.\n     * @exports Trophy\n     * @classdesc Represents a Trophy.\n     * @implements ITrophy\n     * @constructor\n     * @param {ITrophy=} [properties] Properties to set\n     */\n    function Trophy(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Trophy trophy.\n     * @member {string} trophy\n     * @memberof Trophy\n     * @instance\n     */\n    Trophy.prototype.trophy = \"\";\n\n    /**\n     * Trophy timestamp.\n     * @member {number} timestamp\n     * @memberof Trophy\n     * @instance\n     */\n    Trophy.prototype.timestamp = 0;\n\n    /**\n     * Creates a new Trophy instance using the specified properties.\n     * @function create\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy=} [properties] Properties to set\n     * @returns {Trophy} Trophy instance\n     */\n    Trophy.create = function create(properties) {\n        return new Trophy(properties);\n    };\n\n    /**\n     * Encodes the specified Trophy message. Does not implicitly {@link Trophy.verify|verify} messages.\n     * @function encode\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy} message Trophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Trophy.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophy != null && Object.hasOwnProperty.call(message, \"trophy\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trophy);\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.timestamp);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Trophy message, length delimited. Does not implicitly {@link Trophy.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy} message Trophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Trophy.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Trophy message from the specified reader or buffer.\n     * @function decode\n     * @memberof Trophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Trophy} Trophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Trophy.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trophy();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophy = reader.string();\n                break;\n            case 2:\n                message.timestamp = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Trophy message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Trophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Trophy} Trophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Trophy.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Trophy message.\n     * @function verify\n     * @memberof Trophy\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Trophy.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            if (!$util.isString(message.trophy))\n                return \"trophy: string expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp))\n                return \"timestamp: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a Trophy message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Trophy\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Trophy} Trophy\n     */\n    Trophy.fromObject = function fromObject(object) {\n        if (object instanceof $root.Trophy)\n            return object;\n        var message = new $root.Trophy();\n        if (object.trophy != null)\n            message.trophy = String(object.trophy);\n        if (object.timestamp != null)\n            message.timestamp = object.timestamp >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Trophy message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Trophy\n     * @static\n     * @param {Trophy} message Trophy\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Trophy.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.trophy = \"\";\n            object.timestamp = 0;\n        }\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            object.trophy = message.trophy;\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            object.timestamp = message.timestamp;\n        return object;\n    };\n\n    /**\n     * Converts this Trophy to JSON.\n     * @function toJSON\n     * @memberof Trophy\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Trophy.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Trophy;\n})();\n\n$root.ChatMessage = (function() {\n\n    /**\n     * Properties of a ChatMessage.\n     * @exports IChatMessage\n     * @interface IChatMessage\n     * @property {string|null} [message] ChatMessage message\n     * @property {string|null} [fromUser] ChatMessage fromUser\n     * @property {number|null} [timestamp] ChatMessage timestamp\n     */\n\n    /**\n     * Constructs a new ChatMessage.\n     * @exports ChatMessage\n     * @classdesc Represents a ChatMessage.\n     * @implements IChatMessage\n     * @constructor\n     * @param {IChatMessage=} [properties] Properties to set\n     */\n    function ChatMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ChatMessage message.\n     * @member {string} message\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.message = \"\";\n\n    /**\n     * ChatMessage fromUser.\n     * @member {string} fromUser\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.fromUser = \"\";\n\n    /**\n     * ChatMessage timestamp.\n     * @member {number} timestamp\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.timestamp = 0;\n\n    /**\n     * Creates a new ChatMessage instance using the specified properties.\n     * @function create\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage=} [properties] Properties to set\n     * @returns {ChatMessage} ChatMessage instance\n     */\n    ChatMessage.create = function create(properties) {\n        return new ChatMessage(properties);\n    };\n\n    /**\n     * Encodes the specified ChatMessage message. Does not implicitly {@link ChatMessage.verify|verify} messages.\n     * @function encode\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage} message ChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.message != null && Object.hasOwnProperty.call(message, \"message\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);\n        if (message.fromUser != null && Object.hasOwnProperty.call(message, \"fromUser\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.fromUser);\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.timestamp);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link ChatMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage} message ChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ChatMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof ChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ChatMessage} ChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChatMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.message = reader.string();\n                break;\n            case 2:\n                message.fromUser = reader.string();\n                break;\n            case 3:\n                message.timestamp = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ChatMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ChatMessage} ChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ChatMessage message.\n     * @function verify\n     * @memberof ChatMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ChatMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            if (!$util.isString(message.message))\n                return \"message: string expected\";\n        if (message.fromUser != null && message.hasOwnProperty(\"fromUser\"))\n            if (!$util.isString(message.fromUser))\n                return \"fromUser: string expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp))\n                return \"timestamp: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ChatMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ChatMessage} ChatMessage\n     */\n    ChatMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.ChatMessage)\n            return object;\n        var message = new $root.ChatMessage();\n        if (object.message != null)\n            message.message = String(object.message);\n        if (object.fromUser != null)\n            message.fromUser = String(object.fromUser);\n        if (object.timestamp != null)\n            message.timestamp = object.timestamp >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ChatMessage\n     * @static\n     * @param {ChatMessage} message ChatMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ChatMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.message = \"\";\n            object.fromUser = \"\";\n            object.timestamp = 0;\n        }\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            object.message = message.message;\n        if (message.fromUser != null && message.hasOwnProperty(\"fromUser\"))\n            object.fromUser = message.fromUser;\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            object.timestamp = message.timestamp;\n        return object;\n    };\n\n    /**\n     * Converts this ChatMessage to JSON.\n     * @function toJSON\n     * @memberof ChatMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ChatMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ChatMessage;\n})();\n\n/**\n * ContentType enum.\n * @exports ContentType\n * @enum {number}\n * @property {number} Blank=0 Blank value\n * @property {number} WebRtcStream=1 WebRtcStream value\n * @property {number} ActivityStream=2 ActivityStream value\n * @property {number} H5P=3 H5P value\n * @property {number} Image=4 Image value\n * @property {number} Video=5 Video value\n * @property {number} Audio=6 Audio value\n */\n$root.ContentType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Blank\"] = 0;\n    values[valuesById[1] = \"WebRtcStream\"] = 1;\n    values[valuesById[2] = \"ActivityStream\"] = 2;\n    values[valuesById[3] = \"H5P\"] = 3;\n    values[valuesById[4] = \"Image\"] = 4;\n    values[valuesById[5] = \"Video\"] = 5;\n    values[valuesById[6] = \"Audio\"] = 6;\n    return values;\n})();\n\n$root.Content = (function() {\n\n    /**\n     * Properties of a Content.\n     * @exports IContent\n     * @interface IContent\n     * @property {ContentType|null} [type] Content type\n     * @property {string|null} [id] Content id\n     * @property {string|null} [url] Content url\n     */\n\n    /**\n     * Constructs a new Content.\n     * @exports Content\n     * @classdesc Represents a Content.\n     * @implements IContent\n     * @constructor\n     * @param {IContent=} [properties] Properties to set\n     */\n    function Content(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Content type.\n     * @member {ContentType} type\n     * @memberof Content\n     * @instance\n     */\n    Content.prototype.type = 0;\n\n    /**\n     * Content id.\n     * @member {string} id\n     * @memberof Content\n     * @instance\n     */\n    Content.prototype.id = \"\";\n\n    /**\n     * Content url.\n     * @member {string} url\n     * @memberof Content\n     * @instance\n     */\n    Content.prototype.url = \"\";\n\n    /**\n     * Creates a new Content instance using the specified properties.\n     * @function create\n     * @memberof Content\n     * @static\n     * @param {IContent=} [properties] Properties to set\n     * @returns {Content} Content instance\n     */\n    Content.create = function create(properties) {\n        return new Content(properties);\n    };\n\n    /**\n     * Encodes the specified Content message. Does not implicitly {@link Content.verify|verify} messages.\n     * @function encode\n     * @memberof Content\n     * @static\n     * @param {IContent} message Content message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Content.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);\n        if (message.url != null && Object.hasOwnProperty.call(message, \"url\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.url);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Content message, length delimited. Does not implicitly {@link Content.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Content\n     * @static\n     * @param {IContent} message Content message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Content.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Content message from the specified reader or buffer.\n     * @function decode\n     * @memberof Content\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Content} Content\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Content.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Content();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.id = reader.string();\n                break;\n            case 3:\n                message.url = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Content message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Content\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Content} Content\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Content.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Content message.\n     * @function verify\n     * @memberof Content\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Content.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n                break;\n            }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.url != null && message.hasOwnProperty(\"url\"))\n            if (!$util.isString(message.url))\n                return \"url: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a Content message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Content\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Content} Content\n     */\n    Content.fromObject = function fromObject(object) {\n        if (object instanceof $root.Content)\n            return object;\n        var message = new $root.Content();\n        switch (object.type) {\n        case \"Blank\":\n        case 0:\n            message.type = 0;\n            break;\n        case \"WebRtcStream\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"ActivityStream\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"H5P\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"Image\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"Video\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"Audio\":\n        case 6:\n            message.type = 6;\n            break;\n        }\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.url != null)\n            message.url = String(object.url);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Content message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Content\n     * @static\n     * @param {Content} message Content\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Content.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"Blank\" : 0;\n            object.id = \"\";\n            object.url = \"\";\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.ContentType[message.type] : message.type;\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.url != null && message.hasOwnProperty(\"url\"))\n            object.url = message.url;\n        return object;\n    };\n\n    /**\n     * Converts this Content to JSON.\n     * @function toJSON\n     * @memberof Content\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Content.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Content;\n})();\n\nmodule.exports = $root;\n"],"names":["LongBits","util","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","global","this","Writer","BufferWriter","utf8","create","Reader","BufferReader"],"mappings":"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"}